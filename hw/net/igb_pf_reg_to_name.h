

static const char * igb_pf_reg2name(hwaddr offset)
{
    switch (offset) {



// General Register Descriptions
    case 0x00000:
        return "CTRL";
    case 0x00008:
        return "STATUS";
    case 0x00018:
        return "CTRL_EXT";
    case 0x00020:
        return "MDIC";
    case 0x00024:
        return "SERDESCTL";
    case 0x00034:
        return "CONNSW";
    case 0x00038:
        return "VET";
    case 0x00e00:
        return "LEDCTL";

// Packet Buffers Control Register Descriptions
    case 0x02404:
        return "RXPBS";
    case 0x03404:
        return "TXPBS";
    case 0x03004:
        return "SWPBS";
    case 0x034e8:
        return "PBTWAC";
    case 0x024e8:
        return "PBRWAC";
    case 0x030e8:
        return "PBSWAC";

// EEPROM/Flash Register Descriptions
    case 0x00010:
        return "EEC";
    case 0x00014:
        return "EERD";
    case 0x0001c:
        return "FLA";
    case 0x0103c:
        return "FLASHOP";
    case 0x01038:
        return "EEDIAG";
    case 0x01024:
        return "EEARBC";
    case 0x01060:
        return "VPDDIAG";

// MNG-EEPROM CSR I/F
    case 0x01010:
        return "EEMNGCTL";
    case 0x01014:
        return "EEMNGDATA";

// Flow Control Register Descriptions
    case 0x00028:
        return "FCAL";
    case 0x0002c:
        return "FCAH";
    case 0x00030:
        return "FCT";
    case 0x00170:
        return "FCTTV";
    case 0x02160:
        return "FCRTL0";
    case 0x02168:
        return "FCRTH0";
    case 0x02460:
        return "FCRTV";
    case 0x02464:
        return "FCSTS0";

// PCIe Register Descriptions
    case 0x05b00:
        return "GCR";
    case 0x05bbc:
        return "IOVCTL";
    case 0x05b08:
        return "FUNCTAG";
    case 0x05b30:
        return "FACTPS";
    case 0x05b34:
        return "GIOANACTL0";
    case 0x05b38:
        return "GIOANACTL1";
    case 0x05b3c:
        return "GIOANACTL2";
    case 0x05b40:
        return "GIOANACTL3";
    case 0x05b44:
        return "GIOANACTLALL";
    case 0x05b48:
        return "CCMCTL";
    case 0x05b4c:
        return "SCCTL";
    case 0x05b64:
        return "MREVID";

// Semaphore registers
    case 0x05b50:
        return "SWSM";
    case 0x05b54:
        return "FWSM";
    case 0x05b5c:
        return "SW_FW_SYNC";

// Interrupt Register Descriptions
    case 0x01580:
        return "EICR";
    case 0x01520:
        return "EICS";
    case 0x01524:
        return "EIMS";
    case 0x01528:
        return "EIMC";
    case 0x0152c:
        return "EIAC";
    case 0x01530:
        return "EIAM";
    case 0x01500:
        return "ICR";
    case 0x01504:
        return "ICS";
    case 0x000d0:
        return "IMS (alias)";
    case 0x01508:
        return "IMS";
    case 0x0150c:
        return "IMC";
    case 0x01510:
        return "IAM";
    case 0x01680:
        return "EITR0";
    case 0x01684:
        return "EITR1";
    case 0x01688:
        return "EITR2";
    case 0x0168c:
        return "EITR3";
    case 0x01690:
        return "EITR4";
    case 0x01694:
        return "EITR5";
    case 0x01698:
        return "EITR6";
    case 0x0169c:
        return "EITR7";
    case 0x016a0:
        return "EITR8";
    case 0x016a4:
        return "EITR9";
    case 0x016a8:
        return "EITR10";
    case 0x016ac:
        return "EITR11";
    case 0x016b0:
        return "EITR12";
    case 0x016b4:
        return "EITR13";
    case 0x016b8:
        return "EITR14";
    case 0x016bc:
        return "EITR15";
    case 0x016c0:
        return "EITR16";
    case 0x016c4:
        return "EITR17";
    case 0x016c8:
        return "EITR18";
    case 0x016cc:
        return "EITR19";
    case 0x016d0:
        return "EITR20";
    case 0x016d4:
        return "EITR21";
    case 0x016d8:
        return "EITR22";
    case 0x016dc:
        return "EITR23";
    case 0x016e0:
        return "EITR24";
    case 0x01700:
        return "IVAR0";
    case 0x01704:
        return "IVAR1";
    case 0x01708:
        return "IVAR2";
    case 0x0170c:
        return "IVAR3";
    case 0x01710:
        return "IVAR4";
    case 0x01714:
        return "IVAR5";
    case 0x01718:
        return "IVAR6";
    case 0x0171c:
        return "IVAR7";
    case 0x01740:
        return "IVAR_MISC";
    case 0x01514:
        return "GPIE";

// MSI-X Table Register Descriptions
    case 0x05b68:
        return "PBACL";

// Receive Register Descriptions
    case 0x00100:
        return "RCTL";
    case 0x0c00c:
        return "SRRCTL0";
    case 0x0c04c:
        return "SRRCTL1";
    case 0x0c08c:
        return "SRRCTL2";
    case 0x0c0cc:
        return "SRRCTL3";
    case 0x0c10c:
        return "SRRCTL4";
    case 0x0c14c:
        return "SRRCTL5";
    case 0x0c18c:
        return "SRRCTL6";
    case 0x0c1cc:
        return "SRRCTL7";
    case 0x0c20c:
        return "SRRCTL8";
    case 0x0c24c:
        return "SRRCTL9";
    case 0x0c28c:
        return "SRRCTL10";
    case 0x0c2cc:
        return "SRRCTL11";
    case 0x0c30c:
        return "SRRCTL12";
    case 0x0c34c:
        return "SRRCTL13";
    case 0x0c38c:
        return "SRRCTL14";
    case 0x0c3cc:
        return "SRRCTL15";
    case 0x05480:
        return "PSRTYPE0";
    case 0x05484:
        return "PSRTYPE1";
    case 0x05488:
        return "PSRTYPE2";
    case 0x0548c:
        return "PSRTYPE3";
    case 0x05490:
        return "PSRTYPE4";
    case 0x05494:
        return "PSRTYPE5";
    case 0x05498:
        return "PSRTYPE6";
    case 0x0549c:
        return "PSRTYPE7";
    case 0x054c0:
        return "RPLPSRTYPE";

    case 0x02800:
        return "RDBAL0 (a)";
    case 0x02804:
        return "RDBAH0 (a)";
    case 0x02808:
        return "RDLEN0 (a)";
    case 0x0280C:
        return "SRRCTL0 (a)";
    case 0x02810:
        return "RDH0 (a)";
    case 0x02814:
        return "RXCTL0 (a)";
    case 0x02818:
        return "RDL0 (a)";
    case 0x0281C:
        return "RXDCTL0 (a)";

    case 0x03800:
        return "TDBAL0 (a)";
    case 0x03804:
        return "TDBAH0 (a)";
    case 0x03808:
        return "TDLEN0 (a)";
    case 0x03810:
        return "TDH0(a)";
    case 0x03818:
        return "TDT0(a)";
    case 0x03828:
        return "TXDCTL (a)";


    case 0x0c000:
        return "RDBAL0";
    case 0x0c040:
        return "RDBAL1";
    case 0x0c080:
        return "RDBAL2";
    case 0x0c0c0:
        return "RDBAL3";
    case 0x0c100:
        return "RDBAL4";
    case 0x0c140:
        return "RDBAL5";
    case 0x0c180:
        return "RDBAL6";
    case 0x0c1c0:
        return "RDBAL7";
    case 0x0c200:
        return "RDBAL8";
    case 0x0c240:
        return "RDBAL9";
    case 0x0c280:
        return "RDBAL10";
    case 0x0c2c0:
        return "RDBAL11";
    case 0x0c300:
        return "RDBAL12";
    case 0x0c340:
        return "RDBAL13";
    case 0x0c380:
        return "RDBAL14";
    case 0x0c3c0:
        return "RDBAL15";
    case 0x0c004:
        return "RDBAH0";
    case 0x0c044:
        return "RDBAH1";
    case 0x0c084:
        return "RDBAH2";
    case 0x0c0c4:
        return "RDBAH3";
    case 0x0c104:
        return "RDBAH4";
    case 0x0c144:
        return "RDBAH5";
    case 0x0c184:
        return "RDBAH6";
    case 0x0c1c4:
        return "RDBAH7";
    case 0x0c204:
        return "RDBAH8";
    case 0x0c244:
        return "RDBAH9";
    case 0x0c284:
        return "RDBAH10";
    case 0x0c2c4:
        return "RDBAH11";
    case 0x0c304:
        return "RDBAH12";
    case 0x0c344:
        return "RDBAH13";
    case 0x0c384:
        return "RDBAH14";
    case 0x0c3c4:
        return "RDBAH15";
    case 0x0c008:
        return "RDLEN0";
    case 0x0c048:
        return "RDLEN1";
    case 0x0c088:
        return "RDLEN2";
    case 0x0c0c8:
        return "RDLEN3";
    case 0x0c108:
        return "RDLEN4";
    case 0x0c148:
        return "RDLEN5";
    case 0x0c188:
        return "RDLEN6";
    case 0x0c1c8:
        return "RDLEN7";
    case 0x0c208:
        return "RDLEN8";
    case 0x0c248:
        return "RDLEN9";
    case 0x0c288:
        return "RDLEN10";
    case 0x0c2c8:
        return "RDLEN11";
    case 0x0c308:
        return "RDLEN12";
    case 0x0c348:
        return "RDLEN13";
    case 0x0c388:
        return "RDLEN14";
    case 0x0c3c8:
        return "RDLEN15";
    case 0x0c010:
        return "RDH0";
    case 0x0c050:
        return "RDH1";
    case 0x0c090:
        return "RDH2";
    case 0x0c0d0:
        return "RDH3";
    case 0x0c110:
        return "RDH4";
    case 0x0c150:
        return "RDH5";
    case 0x0c190:
        return "RDH6";
    case 0x0c1d0:
        return "RDH7";
    case 0x0c210:
        return "RDH8";
    case 0x0c250:
        return "RDH9";
    case 0x0c290:
        return "RDH10";
    case 0x0c2d0:
        return "RDH11";
    case 0x0c310:
        return "RDH12";
    case 0x0c350:
        return "RDH13";
    case 0x0c390:
        return "RDH14";
    case 0x0c3d0:
        return "RDH15";
    case 0x0c018:
        return "RDT0";
    case 0x0c058:
        return "RDT1";
    case 0x0c098:
        return "RDT2";
    case 0x0c0d8:
        return "RDT3";
    case 0x0c118:
        return "RDT4";
    case 0x0c158:
        return "RDT5";
    case 0x0c198:
        return "RDT6";
    case 0x0c1d8:
        return "RDT7";
    case 0x0c218:
        return "RDT8";
    case 0x0c258:
        return "RDT9";
    case 0x0c298:
        return "RDT10";
    case 0x0c2d8:
        return "RDT11";
    case 0x0c318:
        return "RDT12";
    case 0x0c358:
        return "RDT13";
    case 0x0c398:
        return "RDT14";
    case 0x0c3d8:
        return "RDT15";
    case 0x0c028:
        return "RXDCTL0";
    case 0x0c068:
        return "RXDCTL1";
    case 0x0c0a8:
        return "RXDCTL2";
    case 0x0c0e8:
        return "RXDCTL3";
    case 0x0c128:
        return "RXDCTL4";
    case 0x0c168:
        return "RXDCTL5";
    case 0x0c1a8:
        return "RXDCTL6";
    case 0x0c1e8:
        return "RXDCTL7";
    case 0x0c228:
        return "RXDCTL8";
    case 0x0c268:
        return "RXDCTL9";
    case 0x0c2a8:
        return "RXDCTL10";
    case 0x0c2e8:
        return "RXDCTL11";
    case 0x0c328:
        return "RXDCTL12";
    case 0x0c368:
        return "RXDCTL13";
    case 0x0c3a8:
        return "RXDCTL14";
    case 0x0c3e8:
        return "RXDCTL15";
    case 0x0c030:
        return "RQDPC0";
    case 0x0c070:
        return "RQDPC1";
    case 0x0c0b0:
        return "RQDPC2";
    case 0x0c0f0:
        return "RQDPC3";
    case 0x0c130:
        return "RQDPC4";
    case 0x0c170:
        return "RQDPC5";
    case 0x0c1b0:
        return "RQDPC6";
    case 0x0c1f0:
        return "RQDPC7";
    case 0x0c230:
        return "RQDPC8";
    case 0x0c270:
        return "RQDPC9";
    case 0x0c2b0:
        return "RQDPC10";
    case 0x0c2f0:
        return "RQDPC11";
    case 0x0c330:
        return "RQDPC12";
    case 0x0c370:
        return "RQDPC13";
    case 0x0c3b0:
        return "RQDPC14";
    case 0x0c3f0:
        return "RQDPC15";
    case 0x02540:
        return "DRXMXOD";
    case 0x05000:
        return "RXCSUM";
    case 0x05004:
        return "RLPML";
    case 0x05008:
        return "RFCTL";
    case 0x05200:
        return "MTA0";
    case 0x05204:
        return "MTA1";
    case 0x05208:
        return "MTA2";
    case 0x0520c:
        return "MTA3";
    case 0x05210:
        return "MTA4";
    case 0x05214:
        return "MTA5";
    case 0x05218:
        return "MTA6";
    case 0x0521c:
        return "MTA7";
    case 0x05220:
        return "MTA8";
    case 0x05224:
        return "MTA9";
    case 0x05228:
        return "MTA10";
    case 0x0522c:
        return "MTA11";
    case 0x05230:
        return "MTA12";
    case 0x05234:
        return "MTA13";
    case 0x05238:
        return "MTA14";
    case 0x0523c:
        return "MTA15";
    case 0x05240:
        return "MTA16";
    case 0x05244:
        return "MTA17";
    case 0x05248:
        return "MTA18";
    case 0x0524c:
        return "MTA19";
    case 0x05250:
        return "MTA20";
    case 0x05254:
        return "MTA21";
    case 0x05258:
        return "MTA22";
    case 0x0525c:
        return "MTA23";
    case 0x05260:
        return "MTA24";
    case 0x05264:
        return "MTA25";
    case 0x05268:
        return "MTA26";
    case 0x0526c:
        return "MTA27";
    case 0x05270:
        return "MTA28";
    case 0x05274:
        return "MTA29";
    case 0x05278:
        return "MTA30";
    case 0x0527c:
        return "MTA31";
    case 0x05280:
        return "MTA32";
    case 0x05284:
        return "MTA33";
    case 0x05288:
        return "MTA34";
    case 0x0528c:
        return "MTA35";
    case 0x05290:
        return "MTA36";
    case 0x05294:
        return "MTA37";
    case 0x05298:
        return "MTA38";
    case 0x0529c:
        return "MTA39";
    case 0x052a0:
        return "MTA40";
    case 0x052a4:
        return "MTA41";
    case 0x052a8:
        return "MTA42";
    case 0x052ac:
        return "MTA43";
    case 0x052b0:
        return "MTA44";
    case 0x052b4:
        return "MTA45";
    case 0x052b8:
        return "MTA46";
    case 0x052bc:
        return "MTA47";
    case 0x052c0:
        return "MTA48";
    case 0x052c4:
        return "MTA49";
    case 0x052c8:
        return "MTA50";
    case 0x052cc:
        return "MTA51";
    case 0x052d0:
        return "MTA52";
    case 0x052d4:
        return "MTA53";
    case 0x052d8:
        return "MTA54";
    case 0x052dc:
        return "MTA55";
    case 0x052e0:
        return "MTA56";
    case 0x052e4:
        return "MTA57";
    case 0x052e8:
        return "MTA58";
    case 0x052ec:
        return "MTA59";
    case 0x052f0:
        return "MTA60";
    case 0x052f4:
        return "MTA61";
    case 0x052f8:
        return "MTA62";
    case 0x052fc:
        return "MTA63";
    case 0x05300:
        return "MTA64";
    case 0x05304:
        return "MTA65";
    case 0x05308:
        return "MTA66";
    case 0x0530c:
        return "MTA67";
    case 0x05310:
        return "MTA68";
    case 0x05314:
        return "MTA69";
    case 0x05318:
        return "MTA70";
    case 0x0531c:
        return "MTA71";
    case 0x05320:
        return "MTA72";
    case 0x05324:
        return "MTA73";
    case 0x05328:
        return "MTA74";
    case 0x0532c:
        return "MTA75";
    case 0x05330:
        return "MTA76";
    case 0x05334:
        return "MTA77";
    case 0x05338:
        return "MTA78";
    case 0x0533c:
        return "MTA79";
    case 0x05340:
        return "MTA80";
    case 0x05344:
        return "MTA81";
    case 0x05348:
        return "MTA82";
    case 0x0534c:
        return "MTA83";
    case 0x05350:
        return "MTA84";
    case 0x05354:
        return "MTA85";
    case 0x05358:
        return "MTA86";
    case 0x0535c:
        return "MTA87";
    case 0x05360:
        return "MTA88";
    case 0x05364:
        return "MTA89";
    case 0x05368:
        return "MTA90";
    case 0x0536c:
        return "MTA91";
    case 0x05370:
        return "MTA92";
    case 0x05374:
        return "MTA93";
    case 0x05378:
        return "MTA94";
    case 0x0537c:
        return "MTA95";
    case 0x05380:
        return "MTA96";
    case 0x05384:
        return "MTA97";
    case 0x05388:
        return "MTA98";
    case 0x0538c:
        return "MTA99";
    case 0x05390:
        return "MTA100";
    case 0x05394:
        return "MTA101";
    case 0x05398:
        return "MTA102";
    case 0x0539c:
        return "MTA103";
    case 0x053a0:
        return "MTA104";
    case 0x053a4:
        return "MTA105";
    case 0x053a8:
        return "MTA106";
    case 0x053ac:
        return "MTA107";
    case 0x053b0:
        return "MTA108";
    case 0x053b4:
        return "MTA109";
    case 0x053b8:
        return "MTA110";
    case 0x053bc:
        return "MTA111";
    case 0x053c0:
        return "MTA112";
    case 0x053c4:
        return "MTA113";
    case 0x053c8:
        return "MTA114";
    case 0x053cc:
        return "MTA115";
    case 0x053d0:
        return "MTA116";
    case 0x053d4:
        return "MTA117";
    case 0x053d8:
        return "MTA118";
    case 0x053dc:
        return "MTA119";
    case 0x053e0:
        return "MTA120";
    case 0x053e4:
        return "MTA121";
    case 0x053e8:
        return "MTA122";
    case 0x053ec:
        return "MTA123";
    case 0x053f0:
        return "MTA124";
    case 0x053f4:
        return "MTA125";
    case 0x053f8:
        return "MTA126";
    case 0x053fc:
        return "MTA127";

    case 0x05400:
        return "RAL0";
    case 0x05404:
        return "RAH0";
    case 0x05408:
        return "RAL1";
    case 0x0540c:
        return "RAH1";
    case 0x05410:
        return "RAL2";
    case 0x05414:
        return "RAH2";
    case 0x05418:
        return "RAL3";
    case 0x0541c:
        return "RAH3";
    case 0x05420:
        return "RAL4";
    case 0x05424:
        return "RAH4";
    case 0x05428:
        return "RAL5";
    case 0x0542c:
        return "RAH5";
    case 0x05430:
        return "RAL6";
    case 0x05434:
        return "RAH6";
    case 0x05438:
        return "RAL7";
    case 0x0543c:
        return "RAH7";
    case 0x05440:
        return "RAL8";
    case 0x05444:
        return "RAH8";
    case 0x05448:
        return "RAL9";
    case 0x0544c:
        return "RAH9";
    case 0x05450:
        return "RAL10";
    case 0x05454:
        return "RAH10";
    case 0x05458:
        return "RAL11";
    case 0x0545c:
        return "RAH11";
    case 0x05460:
        return "RAL12";
    case 0x05464:
        return "RAH12";
    case 0x05468:
        return "RAL13";
    case 0x0546c:
        return "RAH13";
    case 0x05470:
        return "RAL14";
    case 0x05474:
        return "RAH14";
    case 0x05478:
        return "RAL15";
    case 0x0547c:
        return "RAH15";
    case 0x054e0:
        return "RAL16";
    case 0x054e4:
        return "RAH16";
    case 0x054e8:
        return "RAL17";
    case 0x054ec:
        return "RAH17";
    case 0x054f0:
        return "RAL18";
    case 0x054f4:
        return "RAH18";
    case 0x054f8:
        return "RAL19";
    case 0x054fc:
        return "RAH19";
    case 0x05500:
        return "RAL20";
    case 0x05504:
        return "RAH20";
    case 0x05508:
        return "RAL21";
    case 0x0550c:
        return "RAH21";
    case 0x05510:
        return "RAL22";
    case 0x05514:
        return "RAH22";
    case 0x05518:
        return "RAL23";
    case 0x0551c:
        return "RAH23";

    case 0x05600:
        return "VFTA0";
    case 0x05604:
        return "VFTA1";
    case 0x05608:
        return "VFTA2";
    case 0x0560c:
        return "VFTA3";
    case 0x05610:
        return "VFTA4";
    case 0x05614:
        return "VFTA5";
    case 0x05618:
        return "VFTA6";
    case 0x0561c:
        return "VFTA7";
    case 0x05620:
        return "VFTA8";
    case 0x05624:
        return "VFTA9";
    case 0x05628:
        return "VFTA10";
    case 0x0562c:
        return "VFTA11";
    case 0x05630:
        return "VFTA12";
    case 0x05634:
        return "VFTA13";
    case 0x05638:
        return "VFTA14";
    case 0x0563c:
        return "VFTA15";
    case 0x05640:
        return "VFTA16";
    case 0x05644:
        return "VFTA17";
    case 0x05648:
        return "VFTA18";
    case 0x0564c:
        return "VFTA19";
    case 0x05650:
        return "VFTA20";
    case 0x05654:
        return "VFTA21";
    case 0x05658:
        return "VFTA22";
    case 0x0565c:
        return "VFTA23";
    case 0x05660:
        return "VFTA24";
    case 0x05664:
        return "VFTA25";
    case 0x05668:
        return "VFTA26";
    case 0x0566c:
        return "VFTA27";
    case 0x05670:
        return "VFTA28";
    case 0x05674:
        return "VFTA29";
    case 0x05678:
        return "VFTA30";
    case 0x0567c:
        return "VFTA31";
    case 0x05680:
        return "VFTA32";
    case 0x05684:
        return "VFTA33";
    case 0x05688:
        return "VFTA34";
    case 0x0568c:
        return "VFTA35";
    case 0x05690:
        return "VFTA36";
    case 0x05694:
        return "VFTA37";
    case 0x05698:
        return "VFTA38";
    case 0x0569c:
        return "VFTA39";
    case 0x056a0:
        return "VFTA40";
    case 0x056a4:
        return "VFTA41";
    case 0x056a8:
        return "VFTA42";
    case 0x056ac:
        return "VFTA43";
    case 0x056b0:
        return "VFTA44";
    case 0x056b4:
        return "VFTA45";
    case 0x056b8:
        return "VFTA46";
    case 0x056bc:
        return "VFTA47";
    case 0x056c0:
        return "VFTA48";
    case 0x056c4:
        return "VFTA49";
    case 0x056c8:
        return "VFTA50";
    case 0x056cc:
        return "VFTA51";
    case 0x056d0:
        return "VFTA52";
    case 0x056d4:
        return "VFTA53";
    case 0x056d8:
        return "VFTA54";
    case 0x056dc:
        return "VFTA55";
    case 0x056e0:
        return "VFTA56";
    case 0x056e4:
        return "VFTA57";
    case 0x056e8:
        return "VFTA58";
    case 0x056ec:
        return "VFTA59";
    case 0x056f0:
        return "VFTA60";
    case 0x056f4:
        return "VFTA61";
    case 0x056f8:
        return "VFTA62";
    case 0x056fc:
        return "VFTA63";
    case 0x05700:
        return "VFTA64";
    case 0x05704:
        return "VFTA65";
    case 0x05708:
        return "VFTA66";
    case 0x0570c:
        return "VFTA67";
    case 0x05710:
        return "VFTA68";
    case 0x05714:
        return "VFTA69";
    case 0x05718:
        return "VFTA70";
    case 0x0571c:
        return "VFTA71";
    case 0x05720:
        return "VFTA72";
    case 0x05724:
        return "VFTA73";
    case 0x05728:
        return "VFTA74";
    case 0x0572c:
        return "VFTA75";
    case 0x05730:
        return "VFTA76";
    case 0x05734:
        return "VFTA77";
    case 0x05738:
        return "VFTA78";
    case 0x0573c:
        return "VFTA79";
    case 0x05740:
        return "VFTA80";
    case 0x05744:
        return "VFTA81";
    case 0x05748:
        return "VFTA82";
    case 0x0574c:
        return "VFTA83";
    case 0x05750:
        return "VFTA84";
    case 0x05754:
        return "VFTA85";
    case 0x05758:
        return "VFTA86";
    case 0x0575c:
        return "VFTA87";
    case 0x05760:
        return "VFTA88";
    case 0x05764:
        return "VFTA89";
    case 0x05768:
        return "VFTA90";
    case 0x0576c:
        return "VFTA91";
    case 0x05770:
        return "VFTA92";
    case 0x05774:
        return "VFTA93";
    case 0x05778:
        return "VFTA94";
    case 0x0577c:
        return "VFTA95";
    case 0x05780:
        return "VFTA96";
    case 0x05784:
        return "VFTA97";
    case 0x05788:
        return "VFTA98";
    case 0x0578c:
        return "VFTA99";
    case 0x05790:
        return "VFTA100";
    case 0x05794:
        return "VFTA101";
    case 0x05798:
        return "VFTA102";
    case 0x0579c:
        return "VFTA103";
    case 0x057a0:
        return "VFTA104";
    case 0x057a4:
        return "VFTA105";
    case 0x057a8:
        return "VFTA106";
    case 0x057ac:
        return "VFTA107";
    case 0x057b0:
        return "VFTA108";
    case 0x057b4:
        return "VFTA109";
    case 0x057b8:
        return "VFTA110";
    case 0x057bc:
        return "VFTA111";
    case 0x057c0:
        return "VFTA112";
    case 0x057c4:
        return "VFTA113";
    case 0x057c8:
        return "VFTA114";
    case 0x057cc:
        return "VFTA115";
    case 0x057d0:
        return "VFTA116";
    case 0x057d4:
        return "VFTA117";
    case 0x057d8:
        return "VFTA118";
    case 0x057dc:
        return "VFTA119";
    case 0x057e0:
        return "VFTA120";
    case 0x057e4:
        return "VFTA121";
    case 0x057e8:
        return "VFTA122";
    case 0x057ec:
        return "VFTA123";
    case 0x057f0:
        return "VFTA124";
    case 0x057f4:
        return "VFTA125";
    case 0x057f8:
        return "VFTA126";
    case 0x057fc:
        return "VFTA127";
    case 0x05818:
        return "MRQC";
    case 0x05c80:
        return "RSSRK0";
    case 0x05c84:
        return "RSSRK1";
    case 0x05c88:
        return "RSSRK2";
    case 0x05c8c:
        return "RSSRK3";
    case 0x05c90:
        return "RSSRK4";
    case 0x05c94:
        return "RSSRK5";
    case 0x05c98:
        return "RSSRK6";
    case 0x05c9c:
        return "RSSRK7";
    case 0x05ca0:
        return "RSSRK8";
    case 0x05ca4:
        return "RSSRK9";
    case 0x05c00:
        return "RETA0";
    case 0x05c04:
        return "RETA1";
    case 0x05c08:
        return "RETA2";
    case 0x05c0c:
        return "RETA3";
    case 0x05c10:
        return "RETA4";
    case 0x05c14:
        return "RETA5";
    case 0x05c18:
        return "RETA6";
    case 0x05c1c:
        return "RETA7";
    case 0x05c20:
        return "RETA8";
    case 0x05c24:
        return "RETA9";
    case 0x05c28:
        return "RETA10";
    case 0x05c2c:
        return "RETA11";
    case 0x05c30:
        return "RETA12";
    case 0x05c34:
        return "RETA13";
    case 0x05c38:
        return "RETA14";
    case 0x05c3c:
        return "RETA15";
    case 0x05c40:
        return "RETA16";
    case 0x05c44:
        return "RETA17";
    case 0x05c48:
        return "RETA18";
    case 0x05c4c:
        return "RETA19";
    case 0x05c50:
        return "RETA20";
    case 0x05c54:
        return "RETA21";
    case 0x05c58:
        return "RETA22";
    case 0x05c5c:
        return "RETA23";
    case 0x05c60:
        return "RETA24";
    case 0x05c64:
        return "RETA25";
    case 0x05c68:
        return "RETA26";
    case 0x05c6c:
        return "RETA27";
    case 0x05c70:
        return "RETA28";
    case 0x05c74:
        return "RETA29";
    case 0x05c78:
        return "RETA30";
    case 0x05c7c:
        return "RETA31";

// Filtering Register Descriptions
    case 0x05a80:
        return "IMIR0";
    case 0x05a84:
        return "IMIR1";
    case 0x05a88:
        return "IMIR2";
    case 0x05a8c:
        return "IMIR3";
    case 0x05a90:
        return "IMIR4";
    case 0x05a94:
        return "IMIR5";
    case 0x05a98:
        return "IMIR6";
    case 0x05a9c:
        return "IMIR7";
    case 0x05aa0:
        return "IMIREXT0";
    case 0x05aa4:
        return "IMIREXT1";
    case 0x05aa8:
        return "IMIREXT2";
    case 0x05aac:
        return "IMIREXT3";
    case 0x05ab0:
        return "IMIREXT4";
    case 0x05ab4:
        return "IMIREXT5";
    case 0x05ab8:
        return "IMIREXT6";
    case 0x05abc:
        return "IMIREXT7";
    case 0x05980:
        return "SAQF0";
    case 0x05984:
        return "SAQF1";
    case 0x05988:
        return "SAQF2";
    case 0x0598c:
        return "SAQF3";
    case 0x05990:
        return "SAQF4";
    case 0x05994:
        return "SAQF5";
    case 0x05998:
        return "SAQF6";
    case 0x0599c:
        return "SAQF7";
    case 0x059a0:
        return "DAQF0";
    case 0x059a4:
        return "DAQF1";
    case 0x059a8:
        return "DAQF2";
    case 0x059ac:
        return "DAQF3";
    case 0x059b0:
        return "DAQF4";
    case 0x059b4:
        return "DAQF5";
    case 0x059b8:
        return "DAQF6";
    case 0x059bc:
        return "DAQF7";
    case 0x059c0:
        return "SPQF0";
    case 0x059c4:
        return "SPQF1";
    case 0x059c8:
        return "SPQF2";
    case 0x059cc:
        return "SPQF3";
    case 0x059d0:
        return "SPQF4";
    case 0x059d4:
        return "SPQF5";
    case 0x059d8:
        return "SPQF6";
    case 0x059dc:
        return "SPQF7";
    case 0x059e0:
        return "FTQF0";
    case 0x059e4:
        return "FTQF1";
    case 0x059e8:
        return "FTQF2";
    case 0x059ec:
        return "FTQF3";
    case 0x059f0:
        return "FTQF4";
    case 0x059f4:
        return "FTQF5";
    case 0x059f8:
        return "FTQF6";
    case 0x059fc:
        return "FTQF7";
    case 0x05ac0:
        return "IMIRVP";
    case 0x055fc:
        return "SYNQF";
    case 0x05cb0:
        return "ETQF0";
    case 0x05cb4:
        return "ETQF1";
    case 0x05cb8:
        return "ETQF2";
    case 0x05cbc:
        return "ETQF3";
    case 0x05cc0:
        return "ETQF4";
    case 0x05cc4:
        return "ETQF5";
    case 0x05cc8:
        return "ETQF6";
    case 0x05ccc:
        return "ETQF7";

// Transmit Register Descriptions
    case 0x00400:
        return "TCTL";
    case 0x00404:
        return "TCTL_EXT";
    case 0x00410:
        return "TIPG";
    case 0x03590:
        return "DTXCTL";
    case 0x0359c:
        return "DTXTCPFLGL";
    case 0x035a0:
        return "DTXTCPFLGH";
    case 0x03540:
        return "DTXMXSZRQ";
    case 0x0e000:
        return "TDBAL0";
    case 0x0e040:
        return "TDBAL1";
    case 0x0e080:
        return "TDBAL2";
    case 0x0e0c0:
        return "TDBAL3";
    case 0x0e100:
        return "TDBAL4";
    case 0x0e140:
        return "TDBAL5";
    case 0x0e180:
        return "TDBAL6";
    case 0x0e1c0:
        return "TDBAL7";
    case 0x0e200:
        return "TDBAL8";
    case 0x0e240:
        return "TDBAL9";
    case 0x0e280:
        return "TDBAL10";
    case 0x0e2c0:
        return "TDBAL11";
    case 0x0e300:
        return "TDBAL12";
    case 0x0e340:
        return "TDBAL13";
    case 0x0e380:
        return "TDBAL14";
    case 0x0e3c0:
        return "TDBAL15";
    case 0x0e004:
        return "TDBAH0";
    case 0x0e044:
        return "TDBAH1";
    case 0x0e084:
        return "TDBAH2";
    case 0x0e0c4:
        return "TDBAH3";
    case 0x0e104:
        return "TDBAH4";
    case 0x0e144:
        return "TDBAH5";
    case 0x0e184:
        return "TDBAH6";
    case 0x0e1c4:
        return "TDBAH7";
    case 0x0e204:
        return "TDBAH8";
    case 0x0e244:
        return "TDBAH9";
    case 0x0e284:
        return "TDBAH10";
    case 0x0e2c4:
        return "TDBAH11";
    case 0x0e304:
        return "TDBAH12";
    case 0x0e344:
        return "TDBAH13";
    case 0x0e384:
        return "TDBAH14";
    case 0x0e3c4:
        return "TDBAH15";
    case 0x0e008:
        return "TDLEN0";
    case 0x0e048:
        return "TDLEN1";
    case 0x0e088:
        return "TDLEN2";
    case 0x0e0c8:
        return "TDLEN3";
    case 0x0e108:
        return "TDLEN4";
    case 0x0e148:
        return "TDLEN5";
    case 0x0e188:
        return "TDLEN6";
    case 0x0e1c8:
        return "TDLEN7";
    case 0x0e208:
        return "TDLEN8";
    case 0x0e248:
        return "TDLEN9";
    case 0x0e288:
        return "TDLEN10";
    case 0x0e2c8:
        return "TDLEN11";
    case 0x0e308:
        return "TDLEN12";
    case 0x0e348:
        return "TDLEN13";
    case 0x0e388:
        return "TDLEN14";
    case 0x0e3c8:
        return "TDLEN15";
    case 0x0e010:
        return "TDH0";
    case 0x0e050:
        return "TDH1";
    case 0x0e090:
        return "TDH2";
    case 0x0e0d0:
        return "TDH3";
    case 0x0e110:
        return "TDH4";
    case 0x0e150:
        return "TDH5";
    case 0x0e190:
        return "TDH6";
    case 0x0e1d0:
        return "TDH7";
    case 0x0e210:
        return "TDH8";
    case 0x0e250:
        return "TDH9";
    case 0x0e290:
        return "TDH10";
    case 0x0e2d0:
        return "TDH11";
    case 0x0e310:
        return "TDH12";
    case 0x0e350:
        return "TDH13";
    case 0x0e390:
        return "TDH14";
    case 0x0e3d0:
        return "TDH15";
    case 0x0e018:
        return "TDT0";
    case 0x0e058:
        return "TDT1";
    case 0x0e098:
        return "TDT2";
    case 0x0e0d8:
        return "TDT3";
    case 0x0e118:
        return "TDT4";
    case 0x0e158:
        return "TDT5";
    case 0x0e198:
        return "TDT6";
    case 0x0e1d8:
        return "TDT7";
    case 0x0e218:
        return "TDT8";
    case 0x0e258:
        return "TDT9";
    case 0x0e298:
        return "TDT10";
    case 0x0e2d8:
        return "TDT11";
    case 0x0e318:
        return "TDT12";
    case 0x0e358:
        return "TDT13";
    case 0x0e398:
        return "TDT14";
    case 0x0e3d8:
        return "TDT15";
    case 0x0e028:
        return "TXDCTL0";
    case 0x0e068:
        return "TXDCTL1";
    case 0x0e0a8:
        return "TXDCTL2";
    case 0x0e0e8:
        return "TXDCTL3";
    case 0x0e128:
        return "TXDCTL4";
    case 0x0e168:
        return "TXDCTL5";
    case 0x0e1a8:
        return "TXDCTL6";
    case 0x0e1e8:
        return "TXDCTL7";
    case 0x0e228:
        return "TXDCTL8";
    case 0x0e268:
        return "TXDCTL9";
    case 0x0e2a8:
        return "TXDCTL10";
    case 0x0e2e8:
        return "TXDCTL11";
    case 0x0e328:
        return "TXDCTL12";
    case 0x0e368:
        return "TXDCTL13";
    case 0x0e3a8:
        return "TXDCTL14";
    case 0x0e3e8:
        return "TXDCTL15";
    case 0x0e038:
        return "TDWBAL0";
    case 0x0e078:
        return "TDWBAL1";
    case 0x0e0b8:
        return "TDWBAL2";
    case 0x0e0f8:
        return "TDWBAL3";
    case 0x0e138:
        return "TDWBAL4";
    case 0x0e178:
        return "TDWBAL5";
    case 0x0e1b8:
        return "TDWBAL6";
    case 0x0e1f8:
        return "TDWBAL7";
    case 0x0e238:
        return "TDWBAL8";
    case 0x0e278:
        return "TDWBAL9";
    case 0x0e2b8:
        return "TDWBAL10";
    case 0x0e2f8:
        return "TDWBAL11";
    case 0x0e338:
        return "TDWBAL12";
    case 0x0e378:
        return "TDWBAL13";
    case 0x0e3b8:
        return "TDWBAL14";
    case 0x0e3f8:
        return "TDWBAL15";
    case 0x0e03c:
        return "TDWBAH0";
    case 0x0e07c:
        return "TDWBAH1";
    case 0x0e0bc:
        return "TDWBAH2";
    case 0x0e0fc:
        return "TDWBAH3";
    case 0x0e13c:
        return "TDWBAH4";
    case 0x0e17c:
        return "TDWBAH5";
    case 0x0e1bc:
        return "TDWBAH6";
    case 0x0e1fc:
        return "TDWBAH7";
    case 0x0e23c:
        return "TDWBAH8";
    case 0x0e27c:
        return "TDWBAH9";
    case 0x0e2bc:
        return "TDWBAH10";
    case 0x0e2fc:
        return "TDWBAH11";
    case 0x0e33c:
        return "TDWBAH12";
    case 0x0e37c:
        return "TDWBAH13";
    case 0x0e3bc:
        return "TDWBAH14";
    case 0x0e3fc:
        return "TDWBAH15";

// DCA Register Descriptions
    case 0x0c014:
        return "RXCTL0";
    case 0x0c054:
        return "RXCTL1";
    case 0x0c094:
        return "RXCTL2";
    case 0x0c0d4:
        return "RXCTL3";
    case 0x0c114:
        return "RXCTL4";
    case 0x0c154:
        return "RXCTL5";
    case 0x0c194:
        return "RXCTL6";
    case 0x0c1d4:
        return "RXCTL7";
    case 0x0c214:
        return "RXCTL8";
    case 0x0c254:
        return "RXCTL9";
    case 0x0c294:
        return "RXCTL10";
    case 0x0c2d4:
        return "RXCTL11";
    case 0x0c314:
        return "RXCTL12";
    case 0x0c354:
        return "RXCTL13";
    case 0x0c394:
        return "RXCTL14";
    case 0x0c3d4:
        return "RXCTL15";
    case 0x0e014:
        return "TXCTL0";
    case 0x0e054:
        return "TXCTL1";
    case 0x0e094:
        return "TXCTL2";
    case 0x0e0d4:
        return "TXCTL3";
    case 0x0e114:
        return "TXCTL4";
    case 0x0e154:
        return "TXCTL5";
    case 0x0e194:
        return "TXCTL6";
    case 0x0e1d4:
        return "TXCTL7";
    case 0x0e214:
        return "TXCTL8";
    case 0x0e254:
        return "TXCTL9";
    case 0x0e294:
        return "TXCTL10";
    case 0x0e2d4:
        return "TXCTL11";
    case 0x0e314:
        return "TXCTL12";
    case 0x0e354:
        return "TXCTL13";
    case 0x0e394:
        return "TXCTL14";
    case 0x0e3d4:
        return "TXCTL15";
    case 0x05b70:
        return "DCA_ID";
    case 0x05b74:
        return "DCA_CTRL";

// Virtualization Register Descriptions
    case 0x0581c:
        return "VT_CTL";
    case 0x00c00:
        return "PFMailbox0";
    case 0x00c04:
        return "PFMailbox1";
    case 0x00c08:
        return "PFMailbox2";
    case 0x00c0c:
        return "PFMailbox3";
    case 0x00c10:
        return "PFMailbox4";
    case 0x00c14:
        return "PFMailbox5";
    case 0x00c18:
        return "PFMailbox6";
    case 0x00c1c:
        return "PFMailbox7";
    case 0x00c40:
        return "VFMailbox0";
    case 0x00c44:
        return "VFMailbox1";
    case 0x00c48:
        return "VFMailbox2";
    case 0x00c4c:
        return "VFMailbox3";
    case 0x00c50:
        return "VFMailbox4";
    case 0x00c54:
        return "VFMailbox5";
    case 0x00c58:
        return "VFMailbox6";
    case 0x00c5c:
        return "VFMailbox7";
    case 0x00c80:
        return "MBVFICR";
    case 0x00c84:
        return "MBVFIMR";
    case 0x00c88:
        return "VFLRE";
    case 0x00c8c:
        return "VFRE";
    case 0x00c90:
        return "VFTE";
    case 0x03554:
        return "WVBR";
    case 0x03510:
        return "VMECM";
    case 0x03548:
        return "LVMMC";
    case 0x02408:
        return "QDE";
    case 0x03500:
        return "DTXSWC";
    case 0x03700:
        return "VMVIR0";
    case 0x03704:
        return "VMVIR1";
    case 0x03708:
        return "VMVIR2";
    case 0x0370c:
        return "VMVIR3";
    case 0x03710:
        return "VMVIR4";
    case 0x03714:
        return "VMVIR5";
    case 0x03718:
        return "VMVIR6";
    case 0x0371c:
        return "VMVIR7";
    case 0x05ad0:
        return "VMOLR0";
    case 0x05ad4:
        return "VMOLR1";
    case 0x05ad8:
        return "VMOLR2";
    case 0x05adc:
        return "VMOLR3";
    case 0x05ae0:
        return "VMOLR4";
    case 0x05ae4:
        return "VMOLR5";
    case 0x05ae8:
        return "VMOLR6";
    case 0x05aec:
        return "VMOLR7";
    case 0x05af0:
        return "RPLOLR";
    case 0x05d00:
        return "VLVF0";
    case 0x05d04:
        return "VLVF1";
    case 0x05d08:
        return "VLVF2";
    case 0x05d0c:
        return "VLVF3";
    case 0x05d10:
        return "VLVF4";
    case 0x05d14:
        return "VLVF5";
    case 0x05d18:
        return "VLVF6";
    case 0x05d1c:
        return "VLVF7";
    case 0x05d20:
        return "VLVF8";
    case 0x05d24:
        return "VLVF9";
    case 0x05d28:
        return "VLVF10";
    case 0x05d2c:
        return "VLVF11";
    case 0x05d30:
        return "VLVF12";
    case 0x05d34:
        return "VLVF13";
    case 0x05d38:
        return "VLVF14";
    case 0x05d3c:
        return "VLVF15";
    case 0x05d40:
        return "VLVF16";
    case 0x05d44:
        return "VLVF17";
    case 0x05d48:
        return "VLVF18";
    case 0x05d4c:
        return "VLVF19";
    case 0x05d50:
        return "VLVF20";
    case 0x05d54:
        return "VLVF21";
    case 0x05d58:
        return "VLVF22";
    case 0x05d5c:
        return "VLVF23";
    case 0x05d60:
        return "VLVF24";
    case 0x05d64:
        return "VLVF25";
    case 0x05d68:
        return "VLVF26";
    case 0x05d6c:
        return "VLVF27";
    case 0x05d70:
        return "VLVF28";
    case 0x05d74:
        return "VLVF29";
    case 0x05d78:
        return "VLVF30";
    case 0x05d7c:
        return "VLVF31";
    case 0x0a000:
        return "UTA0";
    case 0x0a004:
        return "UTA1";
    case 0x0a008:
        return "UTA2";
    case 0x0a00c:
        return "UTA3";
    case 0x0a010:
        return "UTA4";
    case 0x0a014:
        return "UTA5";
    case 0x0a018:
        return "UTA6";
    case 0x0a01c:
        return "UTA7";
    case 0x0a020:
        return "UTA8";
    case 0x0a024:
        return "UTA9";
    case 0x0a028:
        return "UTA10";
    case 0x0a02c:
        return "UTA11";
    case 0x0a030:
        return "UTA12";
    case 0x0a034:
        return "UTA13";
    case 0x0a038:
        return "UTA14";
    case 0x0a03c:
        return "UTA15";
    case 0x0a040:
        return "UTA16";
    case 0x0a044:
        return "UTA17";
    case 0x0a048:
        return "UTA18";
    case 0x0a04c:
        return "UTA19";
    case 0x0a050:
        return "UTA20";
    case 0x0a054:
        return "UTA21";
    case 0x0a058:
        return "UTA22";
    case 0x0a05c:
        return "UTA23";
    case 0x0a060:
        return "UTA24";
    case 0x0a064:
        return "UTA25";
    case 0x0a068:
        return "UTA26";
    case 0x0a06c:
        return "UTA27";
    case 0x0a070:
        return "UTA28";
    case 0x0a074:
        return "UTA29";
    case 0x0a078:
        return "UTA30";
    case 0x0a07c:
        return "UTA31";
    case 0x0a080:
        return "UTA32";
    case 0x0a084:
        return "UTA33";
    case 0x0a088:
        return "UTA34";
    case 0x0a08c:
        return "UTA35";
    case 0x0a090:
        return "UTA36";
    case 0x0a094:
        return "UTA37";
    case 0x0a098:
        return "UTA38";
    case 0x0a09c:
        return "UTA39";
    case 0x0a0a0:
        return "UTA40";
    case 0x0a0a4:
        return "UTA41";
    case 0x0a0a8:
        return "UTA42";
    case 0x0a0ac:
        return "UTA43";
    case 0x0a0b0:
        return "UTA44";
    case 0x0a0b4:
        return "UTA45";
    case 0x0a0b8:
        return "UTA46";
    case 0x0a0bc:
        return "UTA47";
    case 0x0a0c0:
        return "UTA48";
    case 0x0a0c4:
        return "UTA49";
    case 0x0a0c8:
        return "UTA50";
    case 0x0a0cc:
        return "UTA51";
    case 0x0a0d0:
        return "UTA52";
    case 0x0a0d4:
        return "UTA53";
    case 0x0a0d8:
        return "UTA54";
    case 0x0a0dc:
        return "UTA55";
    case 0x0a0e0:
        return "UTA56";
    case 0x0a0e4:
        return "UTA57";
    case 0x0a0e8:
        return "UTA58";
    case 0x0a0ec:
        return "UTA59";
    case 0x0a0f0:
        return "UTA60";
    case 0x0a0f4:
        return "UTA61";
    case 0x0a0f8:
        return "UTA62";
    case 0x0a0fc:
        return "UTA63";
    case 0x0a100:
        return "UTA64";
    case 0x0a104:
        return "UTA65";
    case 0x0a108:
        return "UTA66";
    case 0x0a10c:
        return "UTA67";
    case 0x0a110:
        return "UTA68";
    case 0x0a114:
        return "UTA69";
    case 0x0a118:
        return "UTA70";
    case 0x0a11c:
        return "UTA71";
    case 0x0a120:
        return "UTA72";
    case 0x0a124:
        return "UTA73";
    case 0x0a128:
        return "UTA74";
    case 0x0a12c:
        return "UTA75";
    case 0x0a130:
        return "UTA76";
    case 0x0a134:
        return "UTA77";
    case 0x0a138:
        return "UTA78";
    case 0x0a13c:
        return "UTA79";
    case 0x0a140:
        return "UTA80";
    case 0x0a144:
        return "UTA81";
    case 0x0a148:
        return "UTA82";
    case 0x0a14c:
        return "UTA83";
    case 0x0a150:
        return "UTA84";
    case 0x0a154:
        return "UTA85";
    case 0x0a158:
        return "UTA86";
    case 0x0a15c:
        return "UTA87";
    case 0x0a160:
        return "UTA88";
    case 0x0a164:
        return "UTA89";
    case 0x0a168:
        return "UTA90";
    case 0x0a16c:
        return "UTA91";
    case 0x0a170:
        return "UTA92";
    case 0x0a174:
        return "UTA93";
    case 0x0a178:
        return "UTA94";
    case 0x0a17c:
        return "UTA95";
    case 0x0a180:
        return "UTA96";
    case 0x0a184:
        return "UTA97";
    case 0x0a188:
        return "UTA98";
    case 0x0a18c:
        return "UTA99";
    case 0x0a190:
        return "UTA100";
    case 0x0a194:
        return "UTA101";
    case 0x0a198:
        return "UTA102";
    case 0x0a19c:
        return "UTA103";
    case 0x0a1a0:
        return "UTA104";
    case 0x0a1a4:
        return "UTA105";
    case 0x0a1a8:
        return "UTA106";
    case 0x0a1ac:
        return "UTA107";
    case 0x0a1b0:
        return "UTA108";
    case 0x0a1b4:
        return "UTA109";
    case 0x0a1b8:
        return "UTA110";
    case 0x0a1bc:
        return "UTA111";
    case 0x0a1c0:
        return "UTA112";
    case 0x0a1c4:
        return "UTA113";
    case 0x0a1c8:
        return "UTA114";
    case 0x0a1cc:
        return "UTA115";
    case 0x0a1d0:
        return "UTA116";
    case 0x0a1d4:
        return "UTA117";
    case 0x0a1d8:
        return "UTA118";
    case 0x0a1dc:
        return "UTA119";
    case 0x0a1e0:
        return "UTA120";
    case 0x0a1e4:
        return "UTA121";
    case 0x0a1e8:
        return "UTA122";
    case 0x0a1ec:
        return "UTA123";
    case 0x0a1f0:
        return "UTA124";
    case 0x0a1f4:
        return "UTA125";
    case 0x0a1f8:
        return "UTA126";
    case 0x0a1fc:
        return "UTA127";
    case 0x05db0:
        return "SCCRL";
    case 0x05db4:
        return "SCSTS";
    case 0x05db8:
        return "BSCTRH";
    case 0x05dbc:
        return "MSCTRH";
    case 0x05dc0:
        return "BSCCNT";
    case 0x05dc4:
        return "MSCCNT";
    case 0x05dc8:
        return "SCTC";
    case 0x05dcc:
        return "SCBI";
    case 0x05d80:
        return "VMRCTL0";
    case 0x05d84:
        return "VMRCTL1";
    case 0x05d88:
        return "VMRCTL2";
    case 0x05d8c:
        return "VMRCTL3";
    case 0x05d90:
        return "VMRVLAN0";
    case 0x05d94:
        return "VMRVLAN1";
    case 0x05d98:
        return "VMRVLAN2";
    case 0x05d9c:
        return "VMRVLAN3";
    case 0x05da0:
        return "VMRVM0";
    case 0x05da4:
        return "VMRVM1";
    case 0x05da8:
        return "VMRVM2";
    case 0x05dac:
        return "VMRVM3";
    case 0x036b0:
        return "RC";
    case 0x036b4:
        return "RS";

// Tx Bandwidth Allocation to VM Register Description
    case 0x03600:
        return "VMBACS";
    case 0x03670:
        return "VMBAMMW";
    case 0x03604:
        return "VMBASEL";
    case 0x03608:
        return "VMBAC";

// Timer Register Descriptions
    case 0x01040:
        return "WDSTP";
    case 0x01044:
        return "WDSWSTS";
    case 0x01048:
        return "FRTIMER";
    case 0x0104c:
        return "TCPTIMER";

// Time Sync Register Descriptions
    case 0x0b620:
        return "TSYNCRXCTL";
    case 0x0b624:
        return "RXSTMPL";
    case 0x0b628:
        return "RXSTMPH";
    case 0x0b62c:
        return "RXSATRL";
    case 0x0b630:
        return "RXSATRH";
    case 0x0b614:
        return "TSYNCTXCTL";
    case 0x0b618:
        return "TXSTMPL";
    case 0x0b61c:
        return "TXSTMPH";
    case 0x0b600:
        return "SYSTIML";
    case 0x0b604:
        return "SYSTIMH";
    case 0x0b608:
        return "TIMINCA";
    case 0x0b60c:
        return "TIMADJL";
    case 0x0b610:
        return "TIMADJH";
    case 0x0b640:
        return "TSAUXC";
    case 0x0b644:
        return "TRGTTIML0";
    case 0x0b648:
        return "TRGTTIMH0";
    case 0x0b64c:
        return "TRGTTIML1";
    case 0x0b650:
        return "TRGTTIMH1";
    case 0x0b65c:
        return "AUXSTMPL0";
    case 0x0b660:
        return "AUXSTMPH0";
    case 0x0b664:
        return "AUXSTMPL1";
    case 0x0b668:
        return "AUXSTMPH1";
    case 0x05f50:
        return "TSYNCRXCFG";
    case 0x0003c:
        return "TSSDP";

// PCS Register Descriptions
    case 0x04200:
        return "PCS_CFG";
    case 0x04208:
        return "PCS_LCTL";
    case 0x0420c:
        return "PCS_LSTS";
    case 0x04218:
        return "PCS_ANADV";
    case 0x0421c:
        return "PCS_LPAB";
    case 0x04220:
        return "PCS_NPTX";
    case 0x04224:
        return "PCS_LPABNP";
    case 0x01028:
        return "I2CCMD";
    case 0x0102c:
        return "I2CPARAMS";

// Statistics Register Descriptions
    case 0x04000:
        return "CRCERRS";
    case 0x04004:
        return "ALGNERRC";
    case 0x04008:
        return "SYMERRS";
    case 0x0400c:
        return "RXERRC";
    case 0x04010:
        return "MPC";
    case 0x04018:
        return "ECOL";
    case 0x0401c:
        return "MCC";
    case 0x04020:
        return "LATECOL";
    case 0x04028:
        return "COLC";
    case 0x04030:
        return "DC";
    case 0x04034:
        return "TNCRS";
    case 0x0403c:
        return "HTDPMC";
    case 0x04040:
        return "RLEC";
    case 0x04044:
        return "CBRDPC";
    case 0x04048:
        return "XONRXC";
    case 0x0404c:
        return "XONTXC";
    case 0x04050:
        return "XOFFRXC";
    case 0x04054:
        return "XOFFTXC";
    case 0x04058:
        return "FCRUC";
    case 0x0405c:
        return "PRC64";
    case 0x04060:
        return "PRC127";
    case 0x04064:
        return "PRC255";
    case 0x04068:
        return "PRC511";
    case 0x0406c:
        return "PRC1023";
    case 0x04070:
        return "PRC1522";
    case 0x04074:
        return "GPRC";
    case 0x04078:
        return "BPRC";
    case 0x0407c:
        return "MPRC";
    case 0x04080:
        return "GPTC";
    case 0x04088:
        return "GORCL";
    case 0x0408c:
        return "GORCH";
    case 0x04090:
        return "GOTCL";
    case 0x04094:
        return "GOTCH";
    case 0x040a0:
        return "RNBC";
    case 0x040a4:
        return "RUC";
    case 0x040a8:
        return "RFC";
    case 0x040ac:
        return "ROC";
    case 0x040b0:
        return "RJC";
    case 0x040b4:
        return "MNGPRC";
    case 0x0413c:
        return "BMNGPRC";
    case 0x040b8:
        return "MPDC";
    case 0x04140:
        return "BMPDC";
    case 0x040bc:
        return "MNGPTC";
    case 0x04144:
        return "BMNGPTC";
    case 0x040c0:
        return "TORL";
    case 0x040c4:
        return "TORH";
    case 0x040c8:
        return "TOTL";
    case 0x040cc:
        return "TOTH";
    case 0x040d0:
        return "TPR";
    case 0x040d4:
        return "TPT";
    case 0x040d8:
        return "PTC64";
    case 0x040dc:
        return "PTC127";
    case 0x040e0:
        return "PTC255";
    case 0x040e4:
        return "PTC511";
    case 0x040e8:
        return "PTC1023";
    case 0x040ec:
        return "PTC1522";
    case 0x040f0:
        return "MPTC";
    case 0x040f4:
        return "BPTC";
    case 0x040f8:
        return "TSCTC";
    case 0x040fc:
        return "CBRMPC";
    case 0x04100:
        return "IAC";
    case 0x04104:
        return "RPTHC";
    case 0x04108:
        return "DBGC1";
    case 0x0410c:
        return "DBGC2";
    case 0x04110:
        return "DBGC3";
    case 0x0411c:
        return "DBGC4";
    case 0x04118:
        return "Count-HGPTC";
    case 0x04120:
        return "Count-RXDMTC";
    case 0x04124:
        return "HTCBDPC";
    case 0x04128:
        return "HGORCL";
    case 0x0412c:
        return "HGORCH";
    case 0x04130:
        return "HGOTCL";
    case 0x04134:
        return "HGOTCH";
    case 0x04138:
        return "LENERRS";
    case 0x04228:
        return "SCVPC";
    case 0x041a0:
        return "SSVPC";
    case 0x041a4:
        return "SDPC";

// Wake Up Control Register Descriptions
    case 0x05800:
        return "WUC";
    case 0x05808:
        return "WUFC";
    case 0x05810:
        return "WUS";
    case 0x05900:
        return "WUPL";
    case 0x05a00:
        return "WUPM0";
    case 0x05a04:
        return "WUPM1";
    case 0x05a08:
        return "WUPM2";
    case 0x05a0c:
        return "WUPM3";
    case 0x05a10:
        return "WUPM4";
    case 0x05a14:
        return "WUPM5";
    case 0x05a18:
        return "WUPM6";
    case 0x05a1c:
        return "WUPM7";
    case 0x05a20:
        return "WUPM8";
    case 0x05a24:
        return "WUPM9";
    case 0x05a28:
        return "WUPM10";
    case 0x05a2c:
        return "WUPM11";
    case 0x05a30:
        return "WUPM12";
    case 0x05a34:
        return "WUPM13";
    case 0x05a38:
        return "WUPM14";
    case 0x05a3c:
        return "WUPM15";
    case 0x05a40:
        return "WUPM16";
    case 0x05a44:
        return "WUPM17";
    case 0x05a48:
        return "WUPM18";
    case 0x05a4c:
        return "WUPM19";
    case 0x05a50:
        return "WUPM20";
    case 0x05a54:
        return "WUPM21";
    case 0x05a58:
        return "WUPM22";
    case 0x05a5c:
        return "WUPM23";
    case 0x05a60:
        return "WUPM24";
    case 0x05a64:
        return "WUPM25";
    case 0x05a68:
        return "WUPM26";
    case 0x05a6c:
        return "WUPM27";
    case 0x05a70:
        return "WUPM28";
    case 0x05a74:
        return "WUPM29";
    case 0x05a78:
        return "WUPM30";
    case 0x05a7c:
        return "WUPM31";
    case 0x05838:
        return "IPAV";
    case 0x05840:
        return "IP4AT0";
    case 0x05848:
        return "IP4AT1";
    case 0x05850:
        return "IP4AT2";
    case 0x05858:
        return "IP4AT3";
    case 0x05880:
        return "IP6AT0";
    case 0x05884:
        return "IP6AT1";
    case 0x05888:
        return "IP6AT2";
    case 0x0588c:
        return "IP6AT3";

// Management Register Descriptions
    case 0x05010:
        return "MAVTV0";
    case 0x05014:
        return "MAVTV1";
    case 0x05018:
        return "MAVTV2";
    case 0x0501c:
        return "MAVTV3";
    case 0x05020:
        return "MAVTV4";
    case 0x05024:
        return "MAVTV5";
    case 0x05028:
        return "MAVTV6";
    case 0x0502c:
        return "MAVTV7";
    case 0x05030:
        return "MFUTP0";
    case 0x05034:
        return "MFUTP1";
    case 0x05038:
        return "MFUTP2";
    case 0x0503c:
        return "MFUTP3";
    case 0x05040:
        return "MFUTP4";
    case 0x05044:
        return "MFUTP5";
    case 0x05048:
        return "MFUTP6";
    case 0x0504c:
        return "MFUTP7";
    case 0x05060:
        return "METF0";
    case 0x05064:
        return "METF1";
    case 0x05068:
        return "METF2";
    case 0x0506c:
        return "METF3";
    case 0x05820:
        return "MANC";
    case 0x05824:
        return "MFVAL";
    case 0x05860:
        return "MANC2H";
    case 0x05890:
        return "MDEF0";
    case 0x05894:
        return "MDEF1";
    case 0x05898:
        return "MDEF2";
    case 0x0589c:
        return "MDEF3";
    case 0x058a0:
        return "MDEF4";
    case 0x058a4:
        return "MDEF5";
    case 0x058a8:
        return "MDEF6";
    case 0x058ac:
        return "MDEF7";
    case 0x05930:
        return "MDEF_EXT0";
    case 0x05934:
        return "MDEF_EXT1";
    case 0x05938:
        return "MDEF_EXT2";
    case 0x0593c:
        return "MDEF_EXT3";
    case 0x05940:
        return "MDEF_EXT4";
    case 0x05944:
        return "MDEF_EXT5";
    case 0x05948:
        return "MDEF_EXT6";
    case 0x0594c:
        return "MDEF_EXT7";
    case 0x058b0:
        return "MIPAF0";
    case 0x058b4:
        return "MIPAF1";
    case 0x058b8:
        return "MIPAF2";
    case 0x058bc:
        return "MIPAF3";
    case 0x058c0:
        return "MIPAF4";
    case 0x058c4:
        return "MIPAF5";
    case 0x058c8:
        return "MIPAF6";
    case 0x058cc:
        return "MIPAF7";
    case 0x058d0:
        return "MIPAF8";
    case 0x058d4:
        return "MIPAF9";
    case 0x058d8:
        return "MIPAF10";
    case 0x058dc:
        return "MIPAF11";
    case 0x058e0:
        return "MIPAF12";
    case 0x058e4:
        return "MIPAF13";
    case 0x058e8:
        return "MIPAF14";
    case 0x058ec:
        return "MIPAF15";
    case 0x05910:
        return "MMAL0";
    case 0x05918:
        return "MMAL1";
    case 0x05920:
        return "MMAL2";
    case 0x05928:
        return "MMAL3";
    case 0x05914:
        return "MMAH0";
    case 0x0591c:
        return "MMAH1";
    case 0x05924:
        return "MMAH2";
    case 0x0592c:
        return "MMAH3";

// MACSec Register Descriptions
    case 0x0b000:
        return "LSECTXCAP";
    case 0x0b300:
        return "LSECRXCAP";
    case 0x0b004:
        return "LSECTXCTRL";
    case 0x0b304:
        return "LSECRXCTRL";
    case 0x0b008:
        return "LSECTXSCL";
    case 0x0b00c:
        return "LSECTXSCH";
    case 0x0b010:
        return "LSECTXSA";
    case 0x0b018:
        return "LSECTXPN0";
    case 0x0b01c:
        return "LSECTXPN1";
    case 0x0b020:
        return "LSECTXKEY00";
    case 0x0b024:
        return "LSECTXKEY01";
    case 0x0b028:
        return "LSECTXKEY02";
    case 0x0b02c:
        return "LSECTXKEY03";
    case 0x0b030:
        return "LSECTXKEY10";
    case 0x0b034:
        return "LSECTXKEY11";
    case 0x0b038:
        return "LSECTXKEY12";
    case 0x0b03c:
        return "LSECTXKEY13";
    case 0x0b3d0:
        return "LSECRXSCL";
    case 0x0b3e0:
        return "LSECRXSCH";
    case 0x0b310:
        return "LSECRXSA[n]0";
    case 0x0b314:
        return "LSECRXSA[n]1";
    case 0x0b330:
        return "LSECRXSAPN0";
    case 0x0b334:
        return "LSECRXSAPN1";

// MACSec RX Key - LSECRXKEY (0xB350 + 16*n [n=0
    case 0x08f14:
        return "LSWFW";

// MACSec Tx Port Statistics
    case 0x04300:
        return "LSECTXUT";
    case 0x04304:
        return "LSECTXPKTE";
    case 0x04308:
        return "LSECTXPKTP";
    case 0x0430c:
        return "LSECTXOCTE";
    case 0x04310:
        return "LSECTXOCTP";

// MACSec Rx Port Statistic
    case 0x04314:
        return "LSECRXUT";
    case 0x0431c:
        return "LSECRXOCTE";
    case 0x04320:
        return "LSECRXOCTP";
    case 0x04324:
        return "LSECRXBAD";
    case 0x04328:
        return "LSECRXNOSCI";
    case 0x0432c:
        return "LSECRXUNSCI";

// MACSec Rx SC Statistic Register Descriptions
    case 0x04330:
        return "LSECRXUNCH";
    case 0x04340:
        return "LSECRXDELAY";
    case 0x04350:
        return "LSECRXLATE";

// MACSec Rx SA Statistic Register Descriptions
    case 0x04360:
        return "LSECRXOK[n]0";
    case 0x04364:
        return "LSECRXOK[n]1";
    case 0x04380:
        return "LSECRXINV[n]0";
    case 0x04384:
        return "LSECRXINV[n]1";
    case 0x043a0:
        return "LSECRXNV[n]0";
    case 0x043a4:
        return "LSECRXNV[n]1";
    case 0x043c0:
        return "LSECRXNUSA";
    case 0x043d0:
        return "LSECRXUNSA";

// IPsec Registers Description
    case 0x0b430:
        return "IPSCTRL";
    case 0x0b450:
        return "IPSTXIDX";
    case 0x0b460:
        return "IPSTXKEY0";
    case 0x0b464:
        return "IPSTXKEY1";
    case 0x0b468:
        return "IPSTXKEY2";
    case 0x0b46c:
        return "IPSTXKEY3";
    case 0x0b454:
        return "IPSTXSALT";
    case 0x0b408:
        return "IPSRXCMD";
    case 0x0b40c:
        return "IPSRXSPI";
    case 0x0b410:
        return "IPSRXKEY0";
    case 0x0b414:
        return "IPSRXKEY1";
    case 0x0b418:
        return "IPSRXKEY2";
    case 0x0b41c:
        return "IPSRXKEY3";
    case 0x0b404:
        return "IPSRXSALT";
    case 0x0b420:
        return "IPSRXIPADDR0";
    case 0x0b424:
        return "IPSRXIPADDR1";
    case 0x0b428:
        return "IPSRXIPADDR2";
    case 0x0b42c:
        return "IPSRXIPADDR3";
    case 0x0b400:
        return "IPSRXIDX";

// Diagnostic Registers Description
    case 0x02410:
        return "RDFH";
    case 0x02418:
        return "RDFT";
    case 0x02420:
        return "RDFHS";
    case 0x02428:
        return "RDFTS";
    case 0x03010:
        return "SWBFH";
    case 0x03018:
        return "SWBFT";
    case 0x03020:
        return "SWBFHS";
    case 0x03028:
        return "SWBFTS";
    case 0x02458:
        return "PBDIAG";
    case 0x03410:
        return "TDFH";
    case 0x03418:
        return "TDFT";
    case 0x03420:
        return "TDFHS";
    case 0x03428:
        return "TDFTS";
    case 0x03430:
        return "TDFPC";
    case 0x02430:
        return "RDFPC";
    case 0x03030:
        return "SWDFPC";
    case 0x0b470:
        return "IPPBECCSTS";
    case 0x03100:
        return "PBSLAC";
    case 0x03110:
        return "PBSLAD0";
    case 0x03114:
        return "PBSLAD1";
    case 0x03118:
        return "PBSLAD2";
    case 0x0311c:
        return "PBSLAD3";
    case 0x06000:
        return "RDHM0";
    case 0x06004:
        return "RDHM1";
    case 0x06008:
        return "RDHM2";
    case 0x0600c:
        return "RDHM3";
    case 0x06010:
        return "RDHM4";
    case 0x06014:
        return "RDHM5";
    case 0x06018:
        return "RDHM6";
    case 0x0601c:
        return "RDHM7";
    case 0x06020:
        return "RDHM8";
    case 0x06024:
        return "RDHM9";
    case 0x06028:
        return "RDHM10";
    case 0x0602c:
        return "RDHM11";
    case 0x06030:
        return "RDHM12";
    case 0x06034:
        return "RDHM13";
    case 0x06038:
        return "RDHM14";
    case 0x0603c:
        return "RDHM15";
    case 0x06040:
        return "RDHM16";
    case 0x06044:
        return "RDHM17";
    case 0x06048:
        return "RDHM18";
    case 0x0604c:
        return "RDHM19";
    case 0x06050:
        return "RDHM20";
    case 0x06054:
        return "RDHM21";
    case 0x06058:
        return "RDHM22";
    case 0x0605c:
        return "RDHM23";
    case 0x06060:
        return "RDHM24";
    case 0x06064:
        return "RDHM25";
    case 0x06068:
        return "RDHM26";
    case 0x0606c:
        return "RDHM27";
    case 0x06070:
        return "RDHM28";
    case 0x06074:
        return "RDHM29";
    case 0x06078:
        return "RDHM30";
    case 0x0607c:
        return "RDHM31";
    case 0x06080:
        return "RDHM32";
    case 0x06084:
        return "RDHM33";
    case 0x06088:
        return "RDHM34";
    case 0x0608c:
        return "RDHM35";
    case 0x06090:
        return "RDHM36";
    case 0x06094:
        return "RDHM37";
    case 0x06098:
        return "RDHM38";
    case 0x0609c:
        return "RDHM39";
    case 0x060a0:
        return "RDHM40";
    case 0x060a4:
        return "RDHM41";
    case 0x060a8:
        return "RDHM42";
    case 0x060ac:
        return "RDHM43";
    case 0x060b0:
        return "RDHM44";
    case 0x060b4:
        return "RDHM45";
    case 0x060b8:
        return "RDHM46";
    case 0x060bc:
        return "RDHM47";
    case 0x060c0:
        return "RDHM48";
    case 0x060c4:
        return "RDHM49";
    case 0x060c8:
        return "RDHM50";
    case 0x060cc:
        return "RDHM51";
    case 0x060d0:
        return "RDHM52";
    case 0x060d4:
        return "RDHM53";
    case 0x060d8:
        return "RDHM54";
    case 0x060dc:
        return "RDHM55";
    case 0x060e0:
        return "RDHM56";
    case 0x060e4:
        return "RDHM57";
    case 0x060e8:
        return "RDHM58";
    case 0x060ec:
        return "RDHM59";
    case 0x060f0:
        return "RDHM60";
    case 0x060f4:
        return "RDHM61";
    case 0x060f8:
        return "RDHM62";
    case 0x060fc:
        return "RDHM63";
    case 0x06100:
        return "RDHM64";
    case 0x06104:
        return "RDHM65";
    case 0x06108:
        return "RDHM66";
    case 0x0610c:
        return "RDHM67";
    case 0x06110:
        return "RDHM68";
    case 0x06114:
        return "RDHM69";
    case 0x06118:
        return "RDHM70";
    case 0x0611c:
        return "RDHM71";
    case 0x06120:
        return "RDHM72";
    case 0x06124:
        return "RDHM73";
    case 0x06128:
        return "RDHM74";
    case 0x0612c:
        return "RDHM75";
    case 0x06130:
        return "RDHM76";
    case 0x06134:
        return "RDHM77";
    case 0x06138:
        return "RDHM78";
    case 0x0613c:
        return "RDHM79";
    case 0x06140:
        return "RDHM80";
    case 0x06144:
        return "RDHM81";
    case 0x06148:
        return "RDHM82";
    case 0x0614c:
        return "RDHM83";
    case 0x06150:
        return "RDHM84";
    case 0x06154:
        return "RDHM85";
    case 0x06158:
        return "RDHM86";
    case 0x0615c:
        return "RDHM87";
    case 0x06160:
        return "RDHM88";
    case 0x06164:
        return "RDHM89";
    case 0x06168:
        return "RDHM90";
    case 0x0616c:
        return "RDHM91";
    case 0x06170:
        return "RDHM92";
    case 0x06174:
        return "RDHM93";
    case 0x06178:
        return "RDHM94";
    case 0x0617c:
        return "RDHM95";
    case 0x06180:
        return "RDHM96";
    case 0x06184:
        return "RDHM97";
    case 0x06188:
        return "RDHM98";
    case 0x0618c:
        return "RDHM99";
    case 0x06190:
        return "RDHM100";
    case 0x06194:
        return "RDHM101";
    case 0x06198:
        return "RDHM102";
    case 0x0619c:
        return "RDHM103";
    case 0x061a0:
        return "RDHM104";
    case 0x061a4:
        return "RDHM105";
    case 0x061a8:
        return "RDHM106";
    case 0x061ac:
        return "RDHM107";
    case 0x061b0:
        return "RDHM108";
    case 0x061b4:
        return "RDHM109";
    case 0x061b8:
        return "RDHM110";
    case 0x061bc:
        return "RDHM111";
    case 0x061c0:
        return "RDHM112";
    case 0x061c4:
        return "RDHM113";
    case 0x061c8:
        return "RDHM114";
    case 0x061cc:
        return "RDHM115";
    case 0x061d0:
        return "RDHM116";
    case 0x061d4:
        return "RDHM117";
    case 0x061d8:
        return "RDHM118";
    case 0x061dc:
        return "RDHM119";
    case 0x061e0:
        return "RDHM120";
    case 0x061e4:
        return "RDHM121";
    case 0x061e8:
        return "RDHM122";
    case 0x061ec:
        return "RDHM123";
    case 0x061f0:
        return "RDHM124";
    case 0x061f4:
        return "RDHM125";
    case 0x061f8:
        return "RDHM126";
    case 0x061fc:
        return "RDHM127";
    case 0x06200:
        return "RDHM128";
    case 0x06204:
        return "RDHM129";
    case 0x06208:
        return "RDHM130";
    case 0x0620c:
        return "RDHM131";
    case 0x06210:
        return "RDHM132";
    case 0x06214:
        return "RDHM133";
    case 0x06218:
        return "RDHM134";
    case 0x0621c:
        return "RDHM135";
    case 0x06220:
        return "RDHM136";
    case 0x06224:
        return "RDHM137";
    case 0x06228:
        return "RDHM138";
    case 0x0622c:
        return "RDHM139";
    case 0x06230:
        return "RDHM140";
    case 0x06234:
        return "RDHM141";
    case 0x06238:
        return "RDHM142";
    case 0x0623c:
        return "RDHM143";
    case 0x06240:
        return "RDHM144";
    case 0x06244:
        return "RDHM145";
    case 0x06248:
        return "RDHM146";
    case 0x0624c:
        return "RDHM147";
    case 0x06250:
        return "RDHM148";
    case 0x06254:
        return "RDHM149";
    case 0x06258:
        return "RDHM150";
    case 0x0625c:
        return "RDHM151";
    case 0x06260:
        return "RDHM152";
    case 0x06264:
        return "RDHM153";
    case 0x06268:
        return "RDHM154";
    case 0x0626c:
        return "RDHM155";
    case 0x06270:
        return "RDHM156";
    case 0x06274:
        return "RDHM157";
    case 0x06278:
        return "RDHM158";
    case 0x0627c:
        return "RDHM159";
    case 0x06280:
        return "RDHM160";
    case 0x06284:
        return "RDHM161";
    case 0x06288:
        return "RDHM162";
    case 0x0628c:
        return "RDHM163";
    case 0x06290:
        return "RDHM164";
    case 0x06294:
        return "RDHM165";
    case 0x06298:
        return "RDHM166";
    case 0x0629c:
        return "RDHM167";
    case 0x062a0:
        return "RDHM168";
    case 0x062a4:
        return "RDHM169";
    case 0x062a8:
        return "RDHM170";
    case 0x062ac:
        return "RDHM171";
    case 0x062b0:
        return "RDHM172";
    case 0x062b4:
        return "RDHM173";
    case 0x062b8:
        return "RDHM174";
    case 0x062bc:
        return "RDHM175";
    case 0x062c0:
        return "RDHM176";
    case 0x062c4:
        return "RDHM177";
    case 0x062c8:
        return "RDHM178";
    case 0x062cc:
        return "RDHM179";
    case 0x062d0:
        return "RDHM180";
    case 0x062d4:
        return "RDHM181";
    case 0x062d8:
        return "RDHM182";
    case 0x062dc:
        return "RDHM183";
    case 0x062e0:
        return "RDHM184";
    case 0x062e4:
        return "RDHM185";
    case 0x062e8:
        return "RDHM186";
    case 0x062ec:
        return "RDHM187";
    case 0x062f0:
        return "RDHM188";
    case 0x062f4:
        return "RDHM189";
    case 0x062f8:
        return "RDHM190";
    case 0x062fc:
        return "RDHM191";
    case 0x06300:
        return "RDHM192";
    case 0x06304:
        return "RDHM193";
    case 0x06308:
        return "RDHM194";
    case 0x0630c:
        return "RDHM195";
    case 0x06310:
        return "RDHM196";
    case 0x06314:
        return "RDHM197";
    case 0x06318:
        return "RDHM198";
    case 0x0631c:
        return "RDHM199";
    case 0x06320:
        return "RDHM200";
    case 0x06324:
        return "RDHM201";
    case 0x06328:
        return "RDHM202";
    case 0x0632c:
        return "RDHM203";
    case 0x06330:
        return "RDHM204";
    case 0x06334:
        return "RDHM205";
    case 0x06338:
        return "RDHM206";
    case 0x0633c:
        return "RDHM207";
    case 0x06340:
        return "RDHM208";
    case 0x06344:
        return "RDHM209";
    case 0x06348:
        return "RDHM210";
    case 0x0634c:
        return "RDHM211";
    case 0x06350:
        return "RDHM212";
    case 0x06354:
        return "RDHM213";
    case 0x06358:
        return "RDHM214";
    case 0x0635c:
        return "RDHM215";
    case 0x06360:
        return "RDHM216";
    case 0x06364:
        return "RDHM217";
    case 0x06368:
        return "RDHM218";
    case 0x0636c:
        return "RDHM219";
    case 0x06370:
        return "RDHM220";
    case 0x06374:
        return "RDHM221";
    case 0x06378:
        return "RDHM222";
    case 0x0637c:
        return "RDHM223";
    case 0x06380:
        return "RDHM224";
    case 0x06384:
        return "RDHM225";
    case 0x06388:
        return "RDHM226";
    case 0x0638c:
        return "RDHM227";
    case 0x06390:
        return "RDHM228";
    case 0x06394:
        return "RDHM229";
    case 0x06398:
        return "RDHM230";
    case 0x0639c:
        return "RDHM231";
    case 0x063a0:
        return "RDHM232";
    case 0x063a4:
        return "RDHM233";
    case 0x063a8:
        return "RDHM234";
    case 0x063ac:
        return "RDHM235";
    case 0x063b0:
        return "RDHM236";
    case 0x063b4:
        return "RDHM237";
    case 0x063b8:
        return "RDHM238";
    case 0x063bc:
        return "RDHM239";
    case 0x063c0:
        return "RDHM240";
    case 0x063c4:
        return "RDHM241";
    case 0x063c8:
        return "RDHM242";
    case 0x063cc:
        return "RDHM243";
    case 0x063d0:
        return "RDHM244";
    case 0x063d4:
        return "RDHM245";
    case 0x063d8:
        return "RDHM246";
    case 0x063dc:
        return "RDHM247";
    case 0x063e0:
        return "RDHM248";
    case 0x063e4:
        return "RDHM249";
    case 0x063e8:
        return "RDHM250";
    case 0x063ec:
        return "RDHM251";
    case 0x063f0:
        return "RDHM252";
    case 0x063f4:
        return "RDHM253";
    case 0x063f8:
        return "RDHM254";
    case 0x063fc:
        return "RDHM255";
    case 0x06400:
        return "RDHM256";
    case 0x06404:
        return "RDHM257";
    case 0x06408:
        return "RDHM258";
    case 0x0640c:
        return "RDHM259";
    case 0x06410:
        return "RDHM260";
    case 0x06414:
        return "RDHM261";
    case 0x06418:
        return "RDHM262";
    case 0x0641c:
        return "RDHM263";
    case 0x06420:
        return "RDHM264";
    case 0x06424:
        return "RDHM265";
    case 0x06428:
        return "RDHM266";
    case 0x0642c:
        return "RDHM267";
    case 0x06430:
        return "RDHM268";
    case 0x06434:
        return "RDHM269";
    case 0x06438:
        return "RDHM270";
    case 0x0643c:
        return "RDHM271";
    case 0x06440:
        return "RDHM272";
    case 0x06444:
        return "RDHM273";
    case 0x06448:
        return "RDHM274";
    case 0x0644c:
        return "RDHM275";
    case 0x06450:
        return "RDHM276";
    case 0x06454:
        return "RDHM277";
    case 0x06458:
        return "RDHM278";
    case 0x0645c:
        return "RDHM279";
    case 0x06460:
        return "RDHM280";
    case 0x06464:
        return "RDHM281";
    case 0x06468:
        return "RDHM282";
    case 0x0646c:
        return "RDHM283";
    case 0x06470:
        return "RDHM284";
    case 0x06474:
        return "RDHM285";
    case 0x06478:
        return "RDHM286";
    case 0x0647c:
        return "RDHM287";
    case 0x06480:
        return "RDHM288";
    case 0x06484:
        return "RDHM289";
    case 0x06488:
        return "RDHM290";
    case 0x0648c:
        return "RDHM291";
    case 0x06490:
        return "RDHM292";
    case 0x06494:
        return "RDHM293";
    case 0x06498:
        return "RDHM294";
    case 0x0649c:
        return "RDHM295";
    case 0x064a0:
        return "RDHM296";
    case 0x064a4:
        return "RDHM297";
    case 0x064a8:
        return "RDHM298";
    case 0x064ac:
        return "RDHM299";
    case 0x064b0:
        return "RDHM300";
    case 0x064b4:
        return "RDHM301";
    case 0x064b8:
        return "RDHM302";
    case 0x064bc:
        return "RDHM303";
    case 0x064c0:
        return "RDHM304";
    case 0x064c4:
        return "RDHM305";
    case 0x064c8:
        return "RDHM306";
    case 0x064cc:
        return "RDHM307";
    case 0x064d0:
        return "RDHM308";
    case 0x064d4:
        return "RDHM309";
    case 0x064d8:
        return "RDHM310";
    case 0x064dc:
        return "RDHM311";
    case 0x064e0:
        return "RDHM312";
    case 0x064e4:
        return "RDHM313";
    case 0x064e8:
        return "RDHM314";
    case 0x064ec:
        return "RDHM315";
    case 0x064f0:
        return "RDHM316";
    case 0x064f4:
        return "RDHM317";
    case 0x064f8:
        return "RDHM318";
    case 0x064fc:
        return "RDHM319";
    case 0x06500:
        return "RDHM320";
    case 0x06504:
        return "RDHM321";
    case 0x06508:
        return "RDHM322";
    case 0x0650c:
        return "RDHM323";
    case 0x06510:
        return "RDHM324";
    case 0x06514:
        return "RDHM325";
    case 0x06518:
        return "RDHM326";
    case 0x0651c:
        return "RDHM327";
    case 0x06520:
        return "RDHM328";
    case 0x06524:
        return "RDHM329";
    case 0x06528:
        return "RDHM330";
    case 0x0652c:
        return "RDHM331";
    case 0x06530:
        return "RDHM332";
    case 0x06534:
        return "RDHM333";
    case 0x06538:
        return "RDHM334";
    case 0x0653c:
        return "RDHM335";
    case 0x06540:
        return "RDHM336";
    case 0x06544:
        return "RDHM337";
    case 0x06548:
        return "RDHM338";
    case 0x0654c:
        return "RDHM339";
    case 0x06550:
        return "RDHM340";
    case 0x06554:
        return "RDHM341";
    case 0x06558:
        return "RDHM342";
    case 0x0655c:
        return "RDHM343";
    case 0x06560:
        return "RDHM344";
    case 0x06564:
        return "RDHM345";
    case 0x06568:
        return "RDHM346";
    case 0x0656c:
        return "RDHM347";
    case 0x06570:
        return "RDHM348";
    case 0x06574:
        return "RDHM349";
    case 0x06578:
        return "RDHM350";
    case 0x0657c:
        return "RDHM351";
    case 0x06580:
        return "RDHM352";
    case 0x06584:
        return "RDHM353";
    case 0x06588:
        return "RDHM354";
    case 0x0658c:
        return "RDHM355";
    case 0x06590:
        return "RDHM356";
    case 0x06594:
        return "RDHM357";
    case 0x06598:
        return "RDHM358";
    case 0x0659c:
        return "RDHM359";
    case 0x065a0:
        return "RDHM360";
    case 0x065a4:
        return "RDHM361";
    case 0x065a8:
        return "RDHM362";
    case 0x065ac:
        return "RDHM363";
    case 0x065b0:
        return "RDHM364";
    case 0x065b4:
        return "RDHM365";
    case 0x065b8:
        return "RDHM366";
    case 0x065bc:
        return "RDHM367";
    case 0x065c0:
        return "RDHM368";
    case 0x065c4:
        return "RDHM369";
    case 0x065c8:
        return "RDHM370";
    case 0x065cc:
        return "RDHM371";
    case 0x065d0:
        return "RDHM372";
    case 0x065d4:
        return "RDHM373";
    case 0x065d8:
        return "RDHM374";
    case 0x065dc:
        return "RDHM375";
    case 0x065e0:
        return "RDHM376";
    case 0x065e4:
        return "RDHM377";
    case 0x065e8:
        return "RDHM378";
    case 0x065ec:
        return "RDHM379";
    case 0x065f0:
        return "RDHM380";
    case 0x065f4:
        return "RDHM381";
    case 0x065f8:
        return "RDHM382";
    case 0x065fc:
        return "RDHM383";
    case 0x06600:
        return "RDHM384";
    case 0x06604:
        return "RDHM385";
    case 0x06608:
        return "RDHM386";
    case 0x0660c:
        return "RDHM387";
    case 0x06610:
        return "RDHM388";
    case 0x06614:
        return "RDHM389";
    case 0x06618:
        return "RDHM390";
    case 0x0661c:
        return "RDHM391";
    case 0x06620:
        return "RDHM392";
    case 0x06624:
        return "RDHM393";
    case 0x06628:
        return "RDHM394";
    case 0x0662c:
        return "RDHM395";
    case 0x06630:
        return "RDHM396";
    case 0x06634:
        return "RDHM397";
    case 0x06638:
        return "RDHM398";
    case 0x0663c:
        return "RDHM399";
    case 0x06640:
        return "RDHM400";
    case 0x06644:
        return "RDHM401";
    case 0x06648:
        return "RDHM402";
    case 0x0664c:
        return "RDHM403";
    case 0x06650:
        return "RDHM404";
    case 0x06654:
        return "RDHM405";
    case 0x06658:
        return "RDHM406";
    case 0x0665c:
        return "RDHM407";
    case 0x06660:
        return "RDHM408";
    case 0x06664:
        return "RDHM409";
    case 0x06668:
        return "RDHM410";
    case 0x0666c:
        return "RDHM411";
    case 0x06670:
        return "RDHM412";
    case 0x06674:
        return "RDHM413";
    case 0x06678:
        return "RDHM414";
    case 0x0667c:
        return "RDHM415";
    case 0x06680:
        return "RDHM416";
    case 0x06684:
        return "RDHM417";
    case 0x06688:
        return "RDHM418";
    case 0x0668c:
        return "RDHM419";
    case 0x06690:
        return "RDHM420";
    case 0x06694:
        return "RDHM421";
    case 0x06698:
        return "RDHM422";
    case 0x0669c:
        return "RDHM423";
    case 0x066a0:
        return "RDHM424";
    case 0x066a4:
        return "RDHM425";
    case 0x066a8:
        return "RDHM426";
    case 0x066ac:
        return "RDHM427";
    case 0x066b0:
        return "RDHM428";
    case 0x066b4:
        return "RDHM429";
    case 0x066b8:
        return "RDHM430";
    case 0x066bc:
        return "RDHM431";
    case 0x066c0:
        return "RDHM432";
    case 0x066c4:
        return "RDHM433";
    case 0x066c8:
        return "RDHM434";
    case 0x066cc:
        return "RDHM435";
    case 0x066d0:
        return "RDHM436";
    case 0x066d4:
        return "RDHM437";
    case 0x066d8:
        return "RDHM438";
    case 0x066dc:
        return "RDHM439";
    case 0x066e0:
        return "RDHM440";
    case 0x066e4:
        return "RDHM441";
    case 0x066e8:
        return "RDHM442";
    case 0x066ec:
        return "RDHM443";
    case 0x066f0:
        return "RDHM444";
    case 0x066f4:
        return "RDHM445";
    case 0x066f8:
        return "RDHM446";
    case 0x066fc:
        return "RDHM447";
    case 0x06700:
        return "RDHM448";
    case 0x06704:
        return "RDHM449";
    case 0x06708:
        return "RDHM450";
    case 0x0670c:
        return "RDHM451";
    case 0x06710:
        return "RDHM452";
    case 0x06714:
        return "RDHM453";
    case 0x06718:
        return "RDHM454";
    case 0x0671c:
        return "RDHM455";
    case 0x06720:
        return "RDHM456";
    case 0x06724:
        return "RDHM457";
    case 0x06728:
        return "RDHM458";
    case 0x0672c:
        return "RDHM459";
    case 0x06730:
        return "RDHM460";
    case 0x06734:
        return "RDHM461";
    case 0x06738:
        return "RDHM462";
    case 0x0673c:
        return "RDHM463";
    case 0x06740:
        return "RDHM464";
    case 0x06744:
        return "RDHM465";
    case 0x06748:
        return "RDHM466";
    case 0x0674c:
        return "RDHM467";
    case 0x06750:
        return "RDHM468";
    case 0x06754:
        return "RDHM469";
    case 0x06758:
        return "RDHM470";
    case 0x0675c:
        return "RDHM471";
    case 0x06760:
        return "RDHM472";
    case 0x06764:
        return "RDHM473";
    case 0x06768:
        return "RDHM474";
    case 0x0676c:
        return "RDHM475";
    case 0x06770:
        return "RDHM476";
    case 0x06774:
        return "RDHM477";
    case 0x06778:
        return "RDHM478";
    case 0x0677c:
        return "RDHM479";
    case 0x06780:
        return "RDHM480";
    case 0x06784:
        return "RDHM481";
    case 0x06788:
        return "RDHM482";
    case 0x0678c:
        return "RDHM483";
    case 0x06790:
        return "RDHM484";
    case 0x06794:
        return "RDHM485";
    case 0x06798:
        return "RDHM486";
    case 0x0679c:
        return "RDHM487";
    case 0x067a0:
        return "RDHM488";
    case 0x067a4:
        return "RDHM489";
    case 0x067a8:
        return "RDHM490";
    case 0x067ac:
        return "RDHM491";
    case 0x067b0:
        return "RDHM492";
    case 0x067b4:
        return "RDHM493";
    case 0x067b8:
        return "RDHM494";
    case 0x067bc:
        return "RDHM495";
    case 0x067c0:
        return "RDHM496";
    case 0x067c4:
        return "RDHM497";
    case 0x067c8:
        return "RDHM498";
    case 0x067cc:
        return "RDHM499";
    case 0x067d0:
        return "RDHM500";
    case 0x067d4:
        return "RDHM501";
    case 0x067d8:
        return "RDHM502";
    case 0x067dc:
        return "RDHM503";
    case 0x067e0:
        return "RDHM504";
    case 0x067e4:
        return "RDHM505";
    case 0x067e8:
        return "RDHM506";
    case 0x067ec:
        return "RDHM507";
    case 0x067f0:
        return "RDHM508";
    case 0x067f4:
        return "RDHM509";
    case 0x067f8:
        return "RDHM510";
    case 0x067fc:
        return "RDHM511";
    case 0x06800:
        return "RDHM512";
    case 0x06804:
        return "RDHM513";
    case 0x06808:
        return "RDHM514";
    case 0x0680c:
        return "RDHM515";
    case 0x06810:
        return "RDHM516";
    case 0x06814:
        return "RDHM517";
    case 0x06818:
        return "RDHM518";
    case 0x0681c:
        return "RDHM519";
    case 0x06820:
        return "RDHM520";
    case 0x06824:
        return "RDHM521";
    case 0x06828:
        return "RDHM522";
    case 0x0682c:
        return "RDHM523";
    case 0x06830:
        return "RDHM524";
    case 0x06834:
        return "RDHM525";
    case 0x06838:
        return "RDHM526";
    case 0x0683c:
        return "RDHM527";
    case 0x06840:
        return "RDHM528";
    case 0x06844:
        return "RDHM529";
    case 0x06848:
        return "RDHM530";
    case 0x0684c:
        return "RDHM531";
    case 0x06850:
        return "RDHM532";
    case 0x06854:
        return "RDHM533";
    case 0x06858:
        return "RDHM534";
    case 0x0685c:
        return "RDHM535";
    case 0x06860:
        return "RDHM536";
    case 0x06864:
        return "RDHM537";
    case 0x06868:
        return "RDHM538";
    case 0x0686c:
        return "RDHM539";
    case 0x06870:
        return "RDHM540";
    case 0x06874:
        return "RDHM541";
    case 0x06878:
        return "RDHM542";
    case 0x0687c:
        return "RDHM543";
    case 0x06880:
        return "RDHM544";
    case 0x06884:
        return "RDHM545";
    case 0x06888:
        return "RDHM546";
    case 0x0688c:
        return "RDHM547";
    case 0x06890:
        return "RDHM548";
    case 0x06894:
        return "RDHM549";
    case 0x06898:
        return "RDHM550";
    case 0x0689c:
        return "RDHM551";
    case 0x068a0:
        return "RDHM552";
    case 0x068a4:
        return "RDHM553";
    case 0x068a8:
        return "RDHM554";
    case 0x068ac:
        return "RDHM555";
    case 0x068b0:
        return "RDHM556";
    case 0x068b4:
        return "RDHM557";
    case 0x068b8:
        return "RDHM558";
    case 0x068bc:
        return "RDHM559";
    case 0x068c0:
        return "RDHM560";
    case 0x068c4:
        return "RDHM561";
    case 0x068c8:
        return "RDHM562";
    case 0x068cc:
        return "RDHM563";
    case 0x068d0:
        return "RDHM564";
    case 0x068d4:
        return "RDHM565";
    case 0x068d8:
        return "RDHM566";
    case 0x068dc:
        return "RDHM567";
    case 0x068e0:
        return "RDHM568";
    case 0x068e4:
        return "RDHM569";
    case 0x068e8:
        return "RDHM570";
    case 0x068ec:
        return "RDHM571";
    case 0x068f0:
        return "RDHM572";
    case 0x068f4:
        return "RDHM573";
    case 0x068f8:
        return "RDHM574";
    case 0x068fc:
        return "RDHM575";
    case 0x06900:
        return "RDHM576";
    case 0x06904:
        return "RDHM577";
    case 0x06908:
        return "RDHM578";
    case 0x0690c:
        return "RDHM579";
    case 0x06910:
        return "RDHM580";
    case 0x06914:
        return "RDHM581";
    case 0x06918:
        return "RDHM582";
    case 0x0691c:
        return "RDHM583";
    case 0x06920:
        return "RDHM584";
    case 0x06924:
        return "RDHM585";
    case 0x06928:
        return "RDHM586";
    case 0x0692c:
        return "RDHM587";
    case 0x06930:
        return "RDHM588";
    case 0x06934:
        return "RDHM589";
    case 0x06938:
        return "RDHM590";
    case 0x0693c:
        return "RDHM591";
    case 0x06940:
        return "RDHM592";
    case 0x06944:
        return "RDHM593";
    case 0x06948:
        return "RDHM594";
    case 0x0694c:
        return "RDHM595";
    case 0x06950:
        return "RDHM596";
    case 0x06954:
        return "RDHM597";
    case 0x06958:
        return "RDHM598";
    case 0x0695c:
        return "RDHM599";
    case 0x06960:
        return "RDHM600";
    case 0x06964:
        return "RDHM601";
    case 0x06968:
        return "RDHM602";
    case 0x0696c:
        return "RDHM603";
    case 0x06970:
        return "RDHM604";
    case 0x06974:
        return "RDHM605";
    case 0x06978:
        return "RDHM606";
    case 0x0697c:
        return "RDHM607";
    case 0x06980:
        return "RDHM608";
    case 0x06984:
        return "RDHM609";
    case 0x06988:
        return "RDHM610";
    case 0x0698c:
        return "RDHM611";
    case 0x06990:
        return "RDHM612";
    case 0x06994:
        return "RDHM613";
    case 0x06998:
        return "RDHM614";
    case 0x0699c:
        return "RDHM615";
    case 0x069a0:
        return "RDHM616";
    case 0x069a4:
        return "RDHM617";
    case 0x069a8:
        return "RDHM618";
    case 0x069ac:
        return "RDHM619";
    case 0x069b0:
        return "RDHM620";
    case 0x069b4:
        return "RDHM621";
    case 0x069b8:
        return "RDHM622";
    case 0x069bc:
        return "RDHM623";
    case 0x069c0:
        return "RDHM624";
    case 0x069c4:
        return "RDHM625";
    case 0x069c8:
        return "RDHM626";
    case 0x069cc:
        return "RDHM627";
    case 0x069d0:
        return "RDHM628";
    case 0x069d4:
        return "RDHM629";
    case 0x069d8:
        return "RDHM630";
    case 0x069dc:
        return "RDHM631";
    case 0x069e0:
        return "RDHM632";
    case 0x069e4:
        return "RDHM633";
    case 0x069e8:
        return "RDHM634";
    case 0x069ec:
        return "RDHM635";
    case 0x069f0:
        return "RDHM636";
    case 0x069f4:
        return "RDHM637";
    case 0x069f8:
        return "RDHM638";
    case 0x069fc:
        return "RDHM639";
    case 0x06a00:
        return "RDHM640";
    case 0x06a04:
        return "RDHM641";
    case 0x06a08:
        return "RDHM642";
    case 0x06a0c:
        return "RDHM643";
    case 0x06a10:
        return "RDHM644";
    case 0x06a14:
        return "RDHM645";
    case 0x06a18:
        return "RDHM646";
    case 0x06a1c:
        return "RDHM647";
    case 0x06a20:
        return "RDHM648";
    case 0x06a24:
        return "RDHM649";
    case 0x06a28:
        return "RDHM650";
    case 0x06a2c:
        return "RDHM651";
    case 0x06a30:
        return "RDHM652";
    case 0x06a34:
        return "RDHM653";
    case 0x06a38:
        return "RDHM654";
    case 0x06a3c:
        return "RDHM655";
    case 0x06a40:
        return "RDHM656";
    case 0x06a44:
        return "RDHM657";
    case 0x06a48:
        return "RDHM658";
    case 0x06a4c:
        return "RDHM659";
    case 0x06a50:
        return "RDHM660";
    case 0x06a54:
        return "RDHM661";
    case 0x06a58:
        return "RDHM662";
    case 0x06a5c:
        return "RDHM663";
    case 0x06a60:
        return "RDHM664";
    case 0x06a64:
        return "RDHM665";
    case 0x06a68:
        return "RDHM666";
    case 0x06a6c:
        return "RDHM667";
    case 0x06a70:
        return "RDHM668";
    case 0x06a74:
        return "RDHM669";
    case 0x06a78:
        return "RDHM670";
    case 0x06a7c:
        return "RDHM671";
    case 0x06a80:
        return "RDHM672";
    case 0x06a84:
        return "RDHM673";
    case 0x06a88:
        return "RDHM674";
    case 0x06a8c:
        return "RDHM675";
    case 0x06a90:
        return "RDHM676";
    case 0x06a94:
        return "RDHM677";
    case 0x06a98:
        return "RDHM678";
    case 0x06a9c:
        return "RDHM679";
    case 0x06aa0:
        return "RDHM680";
    case 0x06aa4:
        return "RDHM681";
    case 0x06aa8:
        return "RDHM682";
    case 0x06aac:
        return "RDHM683";
    case 0x06ab0:
        return "RDHM684";
    case 0x06ab4:
        return "RDHM685";
    case 0x06ab8:
        return "RDHM686";
    case 0x06abc:
        return "RDHM687";
    case 0x06ac0:
        return "RDHM688";
    case 0x06ac4:
        return "RDHM689";
    case 0x06ac8:
        return "RDHM690";
    case 0x06acc:
        return "RDHM691";
    case 0x06ad0:
        return "RDHM692";
    case 0x06ad4:
        return "RDHM693";
    case 0x06ad8:
        return "RDHM694";
    case 0x06adc:
        return "RDHM695";
    case 0x06ae0:
        return "RDHM696";
    case 0x06ae4:
        return "RDHM697";
    case 0x06ae8:
        return "RDHM698";
    case 0x06aec:
        return "RDHM699";
    case 0x06af0:
        return "RDHM700";
    case 0x06af4:
        return "RDHM701";
    case 0x06af8:
        return "RDHM702";
    case 0x06afc:
        return "RDHM703";
    case 0x06b00:
        return "RDHM704";
    case 0x06b04:
        return "RDHM705";
    case 0x06b08:
        return "RDHM706";
    case 0x06b0c:
        return "RDHM707";
    case 0x06b10:
        return "RDHM708";
    case 0x06b14:
        return "RDHM709";
    case 0x06b18:
        return "RDHM710";
    case 0x06b1c:
        return "RDHM711";
    case 0x06b20:
        return "RDHM712";
    case 0x06b24:
        return "RDHM713";
    case 0x06b28:
        return "RDHM714";
    case 0x06b2c:
        return "RDHM715";
    case 0x06b30:
        return "RDHM716";
    case 0x06b34:
        return "RDHM717";
    case 0x06b38:
        return "RDHM718";
    case 0x06b3c:
        return "RDHM719";
    case 0x06b40:
        return "RDHM720";
    case 0x06b44:
        return "RDHM721";
    case 0x06b48:
        return "RDHM722";
    case 0x06b4c:
        return "RDHM723";
    case 0x06b50:
        return "RDHM724";
    case 0x06b54:
        return "RDHM725";
    case 0x06b58:
        return "RDHM726";
    case 0x06b5c:
        return "RDHM727";
    case 0x06b60:
        return "RDHM728";
    case 0x06b64:
        return "RDHM729";
    case 0x06b68:
        return "RDHM730";
    case 0x06b6c:
        return "RDHM731";
    case 0x06b70:
        return "RDHM732";
    case 0x06b74:
        return "RDHM733";
    case 0x06b78:
        return "RDHM734";
    case 0x06b7c:
        return "RDHM735";
    case 0x06b80:
        return "RDHM736";
    case 0x06b84:
        return "RDHM737";
    case 0x06b88:
        return "RDHM738";
    case 0x06b8c:
        return "RDHM739";
    case 0x06b90:
        return "RDHM740";
    case 0x06b94:
        return "RDHM741";
    case 0x06b98:
        return "RDHM742";
    case 0x06b9c:
        return "RDHM743";
    case 0x06ba0:
        return "RDHM744";
    case 0x06ba4:
        return "RDHM745";
    case 0x06ba8:
        return "RDHM746";
    case 0x06bac:
        return "RDHM747";
    case 0x06bb0:
        return "RDHM748";
    case 0x06bb4:
        return "RDHM749";
    case 0x06bb8:
        return "RDHM750";
    case 0x06bbc:
        return "RDHM751";
    case 0x06bc0:
        return "RDHM752";
    case 0x06bc4:
        return "RDHM753";
    case 0x06bc8:
        return "RDHM754";
    case 0x06bcc:
        return "RDHM755";
    case 0x06bd0:
        return "RDHM756";
    case 0x06bd4:
        return "RDHM757";
    case 0x06bd8:
        return "RDHM758";
    case 0x06bdc:
        return "RDHM759";
    case 0x06be0:
        return "RDHM760";
    case 0x06be4:
        return "RDHM761";
    case 0x06be8:
        return "RDHM762";
    case 0x06bec:
        return "RDHM763";
    case 0x06bf0:
        return "RDHM764";
    case 0x06bf4:
        return "RDHM765";
    case 0x06bf8:
        return "RDHM766";
    case 0x06bfc:
        return "RDHM767";
    case 0x06c00:
        return "RDHM768";
    case 0x06c04:
        return "RDHM769";
    case 0x06c08:
        return "RDHM770";
    case 0x06c0c:
        return "RDHM771";
    case 0x06c10:
        return "RDHM772";
    case 0x06c14:
        return "RDHM773";
    case 0x06c18:
        return "RDHM774";
    case 0x06c1c:
        return "RDHM775";
    case 0x06c20:
        return "RDHM776";
    case 0x06c24:
        return "RDHM777";
    case 0x06c28:
        return "RDHM778";
    case 0x06c2c:
        return "RDHM779";
    case 0x06c30:
        return "RDHM780";
    case 0x06c34:
        return "RDHM781";
    case 0x06c38:
        return "RDHM782";
    case 0x06c3c:
        return "RDHM783";
    case 0x06c40:
        return "RDHM784";
    case 0x06c44:
        return "RDHM785";
    case 0x06c48:
        return "RDHM786";
    case 0x06c4c:
        return "RDHM787";
    case 0x06c50:
        return "RDHM788";
    case 0x06c54:
        return "RDHM789";
    case 0x06c58:
        return "RDHM790";
    case 0x06c5c:
        return "RDHM791";
    case 0x06c60:
        return "RDHM792";
    case 0x06c64:
        return "RDHM793";
    case 0x06c68:
        return "RDHM794";
    case 0x06c6c:
        return "RDHM795";
    case 0x06c70:
        return "RDHM796";
    case 0x06c74:
        return "RDHM797";
    case 0x06c78:
        return "RDHM798";
    case 0x06c7c:
        return "RDHM799";
    case 0x06c80:
        return "RDHM800";
    case 0x06c84:
        return "RDHM801";
    case 0x06c88:
        return "RDHM802";
    case 0x06c8c:
        return "RDHM803";
    case 0x06c90:
        return "RDHM804";
    case 0x06c94:
        return "RDHM805";
    case 0x06c98:
        return "RDHM806";
    case 0x06c9c:
        return "RDHM807";
    case 0x06ca0:
        return "RDHM808";
    case 0x06ca4:
        return "RDHM809";
    case 0x06ca8:
        return "RDHM810";
    case 0x06cac:
        return "RDHM811";
    case 0x06cb0:
        return "RDHM812";
    case 0x06cb4:
        return "RDHM813";
    case 0x06cb8:
        return "RDHM814";
    case 0x06cbc:
        return "RDHM815";
    case 0x06cc0:
        return "RDHM816";
    case 0x06cc4:
        return "RDHM817";
    case 0x06cc8:
        return "RDHM818";
    case 0x06ccc:
        return "RDHM819";
    case 0x06cd0:
        return "RDHM820";
    case 0x06cd4:
        return "RDHM821";
    case 0x06cd8:
        return "RDHM822";
    case 0x06cdc:
        return "RDHM823";
    case 0x06ce0:
        return "RDHM824";
    case 0x06ce4:
        return "RDHM825";
    case 0x06ce8:
        return "RDHM826";
    case 0x06cec:
        return "RDHM827";
    case 0x06cf0:
        return "RDHM828";
    case 0x06cf4:
        return "RDHM829";
    case 0x06cf8:
        return "RDHM830";
    case 0x06cfc:
        return "RDHM831";
    case 0x06d00:
        return "RDHM832";
    case 0x06d04:
        return "RDHM833";
    case 0x06d08:
        return "RDHM834";
    case 0x06d0c:
        return "RDHM835";
    case 0x06d10:
        return "RDHM836";
    case 0x06d14:
        return "RDHM837";
    case 0x06d18:
        return "RDHM838";
    case 0x06d1c:
        return "RDHM839";
    case 0x06d20:
        return "RDHM840";
    case 0x06d24:
        return "RDHM841";
    case 0x06d28:
        return "RDHM842";
    case 0x06d2c:
        return "RDHM843";
    case 0x06d30:
        return "RDHM844";
    case 0x06d34:
        return "RDHM845";
    case 0x06d38:
        return "RDHM846";
    case 0x06d3c:
        return "RDHM847";
    case 0x06d40:
        return "RDHM848";
    case 0x06d44:
        return "RDHM849";
    case 0x06d48:
        return "RDHM850";
    case 0x06d4c:
        return "RDHM851";
    case 0x06d50:
        return "RDHM852";
    case 0x06d54:
        return "RDHM853";
    case 0x06d58:
        return "RDHM854";
    case 0x06d5c:
        return "RDHM855";
    case 0x06d60:
        return "RDHM856";
    case 0x06d64:
        return "RDHM857";
    case 0x06d68:
        return "RDHM858";
    case 0x06d6c:
        return "RDHM859";
    case 0x06d70:
        return "RDHM860";
    case 0x06d74:
        return "RDHM861";
    case 0x06d78:
        return "RDHM862";
    case 0x06d7c:
        return "RDHM863";
    case 0x06d80:
        return "RDHM864";
    case 0x06d84:
        return "RDHM865";
    case 0x06d88:
        return "RDHM866";
    case 0x06d8c:
        return "RDHM867";
    case 0x06d90:
        return "RDHM868";
    case 0x06d94:
        return "RDHM869";
    case 0x06d98:
        return "RDHM870";
    case 0x06d9c:
        return "RDHM871";
    case 0x06da0:
        return "RDHM872";
    case 0x06da4:
        return "RDHM873";
    case 0x06da8:
        return "RDHM874";
    case 0x06dac:
        return "RDHM875";
    case 0x06db0:
        return "RDHM876";
    case 0x06db4:
        return "RDHM877";
    case 0x06db8:
        return "RDHM878";
    case 0x06dbc:
        return "RDHM879";
    case 0x06dc0:
        return "RDHM880";
    case 0x06dc4:
        return "RDHM881";
    case 0x06dc8:
        return "RDHM882";
    case 0x06dcc:
        return "RDHM883";
    case 0x06dd0:
        return "RDHM884";
    case 0x06dd4:
        return "RDHM885";
    case 0x06dd8:
        return "RDHM886";
    case 0x06ddc:
        return "RDHM887";
    case 0x06de0:
        return "RDHM888";
    case 0x06de4:
        return "RDHM889";
    case 0x06de8:
        return "RDHM890";
    case 0x06dec:
        return "RDHM891";
    case 0x06df0:
        return "RDHM892";
    case 0x06df4:
        return "RDHM893";
    case 0x06df8:
        return "RDHM894";
    case 0x06dfc:
        return "RDHM895";
    case 0x06e00:
        return "RDHM896";
    case 0x06e04:
        return "RDHM897";
    case 0x06e08:
        return "RDHM898";
    case 0x06e0c:
        return "RDHM899";
    case 0x06e10:
        return "RDHM900";
    case 0x06e14:
        return "RDHM901";
    case 0x06e18:
        return "RDHM902";
    case 0x06e1c:
        return "RDHM903";
    case 0x06e20:
        return "RDHM904";
    case 0x06e24:
        return "RDHM905";
    case 0x06e28:
        return "RDHM906";
    case 0x06e2c:
        return "RDHM907";
    case 0x06e30:
        return "RDHM908";
    case 0x06e34:
        return "RDHM909";
    case 0x06e38:
        return "RDHM910";
    case 0x06e3c:
        return "RDHM911";
    case 0x06e40:
        return "RDHM912";
    case 0x06e44:
        return "RDHM913";
    case 0x06e48:
        return "RDHM914";
    case 0x06e4c:
        return "RDHM915";
    case 0x06e50:
        return "RDHM916";
    case 0x06e54:
        return "RDHM917";
    case 0x06e58:
        return "RDHM918";
    case 0x06e5c:
        return "RDHM919";
    case 0x06e60:
        return "RDHM920";
    case 0x06e64:
        return "RDHM921";
    case 0x06e68:
        return "RDHM922";
    case 0x06e6c:
        return "RDHM923";
    case 0x06e70:
        return "RDHM924";
    case 0x06e74:
        return "RDHM925";
    case 0x06e78:
        return "RDHM926";
    case 0x06e7c:
        return "RDHM927";
    case 0x06e80:
        return "RDHM928";
    case 0x06e84:
        return "RDHM929";
    case 0x06e88:
        return "RDHM930";
    case 0x06e8c:
        return "RDHM931";
    case 0x06e90:
        return "RDHM932";
    case 0x06e94:
        return "RDHM933";
    case 0x06e98:
        return "RDHM934";
    case 0x06e9c:
        return "RDHM935";
    case 0x06ea0:
        return "RDHM936";
    case 0x06ea4:
        return "RDHM937";
    case 0x06ea8:
        return "RDHM938";
    case 0x06eac:
        return "RDHM939";
    case 0x06eb0:
        return "RDHM940";
    case 0x06eb4:
        return "RDHM941";
    case 0x06eb8:
        return "RDHM942";
    case 0x06ebc:
        return "RDHM943";
    case 0x06ec0:
        return "RDHM944";
    case 0x06ec4:
        return "RDHM945";
    case 0x06ec8:
        return "RDHM946";
    case 0x06ecc:
        return "RDHM947";
    case 0x06ed0:
        return "RDHM948";
    case 0x06ed4:
        return "RDHM949";
    case 0x06ed8:
        return "RDHM950";
    case 0x06edc:
        return "RDHM951";
    case 0x06ee0:
        return "RDHM952";
    case 0x06ee4:
        return "RDHM953";
    case 0x06ee8:
        return "RDHM954";
    case 0x06eec:
        return "RDHM955";
    case 0x06ef0:
        return "RDHM956";
    case 0x06ef4:
        return "RDHM957";
    case 0x06ef8:
        return "RDHM958";
    case 0x06efc:
        return "RDHM959";
    case 0x06f00:
        return "RDHM960";
    case 0x06f04:
        return "RDHM961";
    case 0x06f08:
        return "RDHM962";
    case 0x06f0c:
        return "RDHM963";
    case 0x06f10:
        return "RDHM964";
    case 0x06f14:
        return "RDHM965";
    case 0x06f18:
        return "RDHM966";
    case 0x06f1c:
        return "RDHM967";
    case 0x06f20:
        return "RDHM968";
    case 0x06f24:
        return "RDHM969";
    case 0x06f28:
        return "RDHM970";
    case 0x06f2c:
        return "RDHM971";
    case 0x06f30:
        return "RDHM972";
    case 0x06f34:
        return "RDHM973";
    case 0x06f38:
        return "RDHM974";
    case 0x06f3c:
        return "RDHM975";
    case 0x06f40:
        return "RDHM976";
    case 0x06f44:
        return "RDHM977";
    case 0x06f48:
        return "RDHM978";
    case 0x06f4c:
        return "RDHM979";
    case 0x06f50:
        return "RDHM980";
    case 0x06f54:
        return "RDHM981";
    case 0x06f58:
        return "RDHM982";
    case 0x06f5c:
        return "RDHM983";
    case 0x06f60:
        return "RDHM984";
    case 0x06f64:
        return "RDHM985";
    case 0x06f68:
        return "RDHM986";
    case 0x06f6c:
        return "RDHM987";
    case 0x06f70:
        return "RDHM988";
    case 0x06f74:
        return "RDHM989";
    case 0x06f78:
        return "RDHM990";
    case 0x06f7c:
        return "RDHM991";
    case 0x06f80:
        return "RDHM992";
    case 0x06f84:
        return "RDHM993";
    case 0x06f88:
        return "RDHM994";
    case 0x06f8c:
        return "RDHM995";
    case 0x06f90:
        return "RDHM996";
    case 0x06f94:
        return "RDHM997";
    case 0x06f98:
        return "RDHM998";
    case 0x06f9c:
        return "RDHM999";
    case 0x06fa0:
        return "RDHM1000";
    case 0x06fa4:
        return "RDHM1001";
    case 0x06fa8:
        return "RDHM1002";
    case 0x06fac:
        return "RDHM1003";
    case 0x06fb0:
        return "RDHM1004";
    case 0x06fb4:
        return "RDHM1005";
    case 0x06fb8:
        return "RDHM1006";
    case 0x06fbc:
        return "RDHM1007";
    case 0x06fc0:
        return "RDHM1008";
    case 0x06fc4:
        return "RDHM1009";
    case 0x06fc8:
        return "RDHM1010";
    case 0x06fcc:
        return "RDHM1011";
    case 0x06fd0:
        return "RDHM1012";
    case 0x06fd4:
        return "RDHM1013";
    case 0x06fd8:
        return "RDHM1014";
    case 0x06fdc:
        return "RDHM1015";
    case 0x06fe0:
        return "RDHM1016";
    case 0x06fe4:
        return "RDHM1017";
    case 0x06fe8:
        return "RDHM1018";
    case 0x06fec:
        return "RDHM1019";
    case 0x06ff0:
        return "RDHM1020";
    case 0x06ff4:
        return "RDHM1021";
    case 0x06ff8:
        return "RDHM1022";
    case 0x06ffc:
        return "RDHM1023";
    case 0x025fc:
        return "RDHMP";
    case 0x07000:
        return "TDHM0";
    case 0x07004:
        return "TDHM1";
    case 0x07008:
        return "TDHM2";
    case 0x0700c:
        return "TDHM3";
    case 0x07010:
        return "TDHM4";
    case 0x07014:
        return "TDHM5";
    case 0x07018:
        return "TDHM6";
    case 0x0701c:
        return "TDHM7";
    case 0x07020:
        return "TDHM8";
    case 0x07024:
        return "TDHM9";
    case 0x07028:
        return "TDHM10";
    case 0x0702c:
        return "TDHM11";
    case 0x07030:
        return "TDHM12";
    case 0x07034:
        return "TDHM13";
    case 0x07038:
        return "TDHM14";
    case 0x0703c:
        return "TDHM15";
    case 0x07040:
        return "TDHM16";
    case 0x07044:
        return "TDHM17";
    case 0x07048:
        return "TDHM18";
    case 0x0704c:
        return "TDHM19";
    case 0x07050:
        return "TDHM20";
    case 0x07054:
        return "TDHM21";
    case 0x07058:
        return "TDHM22";
    case 0x0705c:
        return "TDHM23";
    case 0x07060:
        return "TDHM24";
    case 0x07064:
        return "TDHM25";
    case 0x07068:
        return "TDHM26";
    case 0x0706c:
        return "TDHM27";
    case 0x07070:
        return "TDHM28";
    case 0x07074:
        return "TDHM29";
    case 0x07078:
        return "TDHM30";
    case 0x0707c:
        return "TDHM31";
    case 0x07080:
        return "TDHM32";
    case 0x07084:
        return "TDHM33";
    case 0x07088:
        return "TDHM34";
    case 0x0708c:
        return "TDHM35";
    case 0x07090:
        return "TDHM36";
    case 0x07094:
        return "TDHM37";
    case 0x07098:
        return "TDHM38";
    case 0x0709c:
        return "TDHM39";
    case 0x070a0:
        return "TDHM40";
    case 0x070a4:
        return "TDHM41";
    case 0x070a8:
        return "TDHM42";
    case 0x070ac:
        return "TDHM43";
    case 0x070b0:
        return "TDHM44";
    case 0x070b4:
        return "TDHM45";
    case 0x070b8:
        return "TDHM46";
    case 0x070bc:
        return "TDHM47";
    case 0x070c0:
        return "TDHM48";
    case 0x070c4:
        return "TDHM49";
    case 0x070c8:
        return "TDHM50";
    case 0x070cc:
        return "TDHM51";
    case 0x070d0:
        return "TDHM52";
    case 0x070d4:
        return "TDHM53";
    case 0x070d8:
        return "TDHM54";
    case 0x070dc:
        return "TDHM55";
    case 0x070e0:
        return "TDHM56";
    case 0x070e4:
        return "TDHM57";
    case 0x070e8:
        return "TDHM58";
    case 0x070ec:
        return "TDHM59";
    case 0x070f0:
        return "TDHM60";
    case 0x070f4:
        return "TDHM61";
    case 0x070f8:
        return "TDHM62";
    case 0x070fc:
        return "TDHM63";
    case 0x07100:
        return "TDHM64";
    case 0x07104:
        return "TDHM65";
    case 0x07108:
        return "TDHM66";
    case 0x0710c:
        return "TDHM67";
    case 0x07110:
        return "TDHM68";
    case 0x07114:
        return "TDHM69";
    case 0x07118:
        return "TDHM70";
    case 0x0711c:
        return "TDHM71";
    case 0x07120:
        return "TDHM72";
    case 0x07124:
        return "TDHM73";
    case 0x07128:
        return "TDHM74";
    case 0x0712c:
        return "TDHM75";
    case 0x07130:
        return "TDHM76";
    case 0x07134:
        return "TDHM77";
    case 0x07138:
        return "TDHM78";
    case 0x0713c:
        return "TDHM79";
    case 0x07140:
        return "TDHM80";
    case 0x07144:
        return "TDHM81";
    case 0x07148:
        return "TDHM82";
    case 0x0714c:
        return "TDHM83";
    case 0x07150:
        return "TDHM84";
    case 0x07154:
        return "TDHM85";
    case 0x07158:
        return "TDHM86";
    case 0x0715c:
        return "TDHM87";
    case 0x07160:
        return "TDHM88";
    case 0x07164:
        return "TDHM89";
    case 0x07168:
        return "TDHM90";
    case 0x0716c:
        return "TDHM91";
    case 0x07170:
        return "TDHM92";
    case 0x07174:
        return "TDHM93";
    case 0x07178:
        return "TDHM94";
    case 0x0717c:
        return "TDHM95";
    case 0x07180:
        return "TDHM96";
    case 0x07184:
        return "TDHM97";
    case 0x07188:
        return "TDHM98";
    case 0x0718c:
        return "TDHM99";
    case 0x07190:
        return "TDHM100";
    case 0x07194:
        return "TDHM101";
    case 0x07198:
        return "TDHM102";
    case 0x0719c:
        return "TDHM103";
    case 0x071a0:
        return "TDHM104";
    case 0x071a4:
        return "TDHM105";
    case 0x071a8:
        return "TDHM106";
    case 0x071ac:
        return "TDHM107";
    case 0x071b0:
        return "TDHM108";
    case 0x071b4:
        return "TDHM109";
    case 0x071b8:
        return "TDHM110";
    case 0x071bc:
        return "TDHM111";
    case 0x071c0:
        return "TDHM112";
    case 0x071c4:
        return "TDHM113";
    case 0x071c8:
        return "TDHM114";
    case 0x071cc:
        return "TDHM115";
    case 0x071d0:
        return "TDHM116";
    case 0x071d4:
        return "TDHM117";
    case 0x071d8:
        return "TDHM118";
    case 0x071dc:
        return "TDHM119";
    case 0x071e0:
        return "TDHM120";
    case 0x071e4:
        return "TDHM121";
    case 0x071e8:
        return "TDHM122";
    case 0x071ec:
        return "TDHM123";
    case 0x071f0:
        return "TDHM124";
    case 0x071f4:
        return "TDHM125";
    case 0x071f8:
        return "TDHM126";
    case 0x071fc:
        return "TDHM127";
    case 0x07200:
        return "TDHM128";
    case 0x07204:
        return "TDHM129";
    case 0x07208:
        return "TDHM130";
    case 0x0720c:
        return "TDHM131";
    case 0x07210:
        return "TDHM132";
    case 0x07214:
        return "TDHM133";
    case 0x07218:
        return "TDHM134";
    case 0x0721c:
        return "TDHM135";
    case 0x07220:
        return "TDHM136";
    case 0x07224:
        return "TDHM137";
    case 0x07228:
        return "TDHM138";
    case 0x0722c:
        return "TDHM139";
    case 0x07230:
        return "TDHM140";
    case 0x07234:
        return "TDHM141";
    case 0x07238:
        return "TDHM142";
    case 0x0723c:
        return "TDHM143";
    case 0x07240:
        return "TDHM144";
    case 0x07244:
        return "TDHM145";
    case 0x07248:
        return "TDHM146";
    case 0x0724c:
        return "TDHM147";
    case 0x07250:
        return "TDHM148";
    case 0x07254:
        return "TDHM149";
    case 0x07258:
        return "TDHM150";
    case 0x0725c:
        return "TDHM151";
    case 0x07260:
        return "TDHM152";
    case 0x07264:
        return "TDHM153";
    case 0x07268:
        return "TDHM154";
    case 0x0726c:
        return "TDHM155";
    case 0x07270:
        return "TDHM156";
    case 0x07274:
        return "TDHM157";
    case 0x07278:
        return "TDHM158";
    case 0x0727c:
        return "TDHM159";
    case 0x07280:
        return "TDHM160";
    case 0x07284:
        return "TDHM161";
    case 0x07288:
        return "TDHM162";
    case 0x0728c:
        return "TDHM163";
    case 0x07290:
        return "TDHM164";
    case 0x07294:
        return "TDHM165";
    case 0x07298:
        return "TDHM166";
    case 0x0729c:
        return "TDHM167";
    case 0x072a0:
        return "TDHM168";
    case 0x072a4:
        return "TDHM169";
    case 0x072a8:
        return "TDHM170";
    case 0x072ac:
        return "TDHM171";
    case 0x072b0:
        return "TDHM172";
    case 0x072b4:
        return "TDHM173";
    case 0x072b8:
        return "TDHM174";
    case 0x072bc:
        return "TDHM175";
    case 0x072c0:
        return "TDHM176";
    case 0x072c4:
        return "TDHM177";
    case 0x072c8:
        return "TDHM178";
    case 0x072cc:
        return "TDHM179";
    case 0x072d0:
        return "TDHM180";
    case 0x072d4:
        return "TDHM181";
    case 0x072d8:
        return "TDHM182";
    case 0x072dc:
        return "TDHM183";
    case 0x072e0:
        return "TDHM184";
    case 0x072e4:
        return "TDHM185";
    case 0x072e8:
        return "TDHM186";
    case 0x072ec:
        return "TDHM187";
    case 0x072f0:
        return "TDHM188";
    case 0x072f4:
        return "TDHM189";
    case 0x072f8:
        return "TDHM190";
    case 0x072fc:
        return "TDHM191";
    case 0x07300:
        return "TDHM192";
    case 0x07304:
        return "TDHM193";
    case 0x07308:
        return "TDHM194";
    case 0x0730c:
        return "TDHM195";
    case 0x07310:
        return "TDHM196";
    case 0x07314:
        return "TDHM197";
    case 0x07318:
        return "TDHM198";
    case 0x0731c:
        return "TDHM199";
    case 0x07320:
        return "TDHM200";
    case 0x07324:
        return "TDHM201";
    case 0x07328:
        return "TDHM202";
    case 0x0732c:
        return "TDHM203";
    case 0x07330:
        return "TDHM204";
    case 0x07334:
        return "TDHM205";
    case 0x07338:
        return "TDHM206";
    case 0x0733c:
        return "TDHM207";
    case 0x07340:
        return "TDHM208";
    case 0x07344:
        return "TDHM209";
    case 0x07348:
        return "TDHM210";
    case 0x0734c:
        return "TDHM211";
    case 0x07350:
        return "TDHM212";
    case 0x07354:
        return "TDHM213";
    case 0x07358:
        return "TDHM214";
    case 0x0735c:
        return "TDHM215";
    case 0x07360:
        return "TDHM216";
    case 0x07364:
        return "TDHM217";
    case 0x07368:
        return "TDHM218";
    case 0x0736c:
        return "TDHM219";
    case 0x07370:
        return "TDHM220";
    case 0x07374:
        return "TDHM221";
    case 0x07378:
        return "TDHM222";
    case 0x0737c:
        return "TDHM223";
    case 0x07380:
        return "TDHM224";
    case 0x07384:
        return "TDHM225";
    case 0x07388:
        return "TDHM226";
    case 0x0738c:
        return "TDHM227";
    case 0x07390:
        return "TDHM228";
    case 0x07394:
        return "TDHM229";
    case 0x07398:
        return "TDHM230";
    case 0x0739c:
        return "TDHM231";
    case 0x073a0:
        return "TDHM232";
    case 0x073a4:
        return "TDHM233";
    case 0x073a8:
        return "TDHM234";
    case 0x073ac:
        return "TDHM235";
    case 0x073b0:
        return "TDHM236";
    case 0x073b4:
        return "TDHM237";
    case 0x073b8:
        return "TDHM238";
    case 0x073bc:
        return "TDHM239";
    case 0x073c0:
        return "TDHM240";
    case 0x073c4:
        return "TDHM241";
    case 0x073c8:
        return "TDHM242";
    case 0x073cc:
        return "TDHM243";
    case 0x073d0:
        return "TDHM244";
    case 0x073d4:
        return "TDHM245";
    case 0x073d8:
        return "TDHM246";
    case 0x073dc:
        return "TDHM247";
    case 0x073e0:
        return "TDHM248";
    case 0x073e4:
        return "TDHM249";
    case 0x073e8:
        return "TDHM250";
    case 0x073ec:
        return "TDHM251";
    case 0x073f0:
        return "TDHM252";
    case 0x073f4:
        return "TDHM253";
    case 0x073f8:
        return "TDHM254";
    case 0x073fc:
        return "TDHM255";
    case 0x07400:
        return "TDHM256";
    case 0x07404:
        return "TDHM257";
    case 0x07408:
        return "TDHM258";
    case 0x0740c:
        return "TDHM259";
    case 0x07410:
        return "TDHM260";
    case 0x07414:
        return "TDHM261";
    case 0x07418:
        return "TDHM262";
    case 0x0741c:
        return "TDHM263";
    case 0x07420:
        return "TDHM264";
    case 0x07424:
        return "TDHM265";
    case 0x07428:
        return "TDHM266";
    case 0x0742c:
        return "TDHM267";
    case 0x07430:
        return "TDHM268";
    case 0x07434:
        return "TDHM269";
    case 0x07438:
        return "TDHM270";
    case 0x0743c:
        return "TDHM271";
    case 0x07440:
        return "TDHM272";
    case 0x07444:
        return "TDHM273";
    case 0x07448:
        return "TDHM274";
    case 0x0744c:
        return "TDHM275";
    case 0x07450:
        return "TDHM276";
    case 0x07454:
        return "TDHM277";
    case 0x07458:
        return "TDHM278";
    case 0x0745c:
        return "TDHM279";
    case 0x07460:
        return "TDHM280";
    case 0x07464:
        return "TDHM281";
    case 0x07468:
        return "TDHM282";
    case 0x0746c:
        return "TDHM283";
    case 0x07470:
        return "TDHM284";
    case 0x07474:
        return "TDHM285";
    case 0x07478:
        return "TDHM286";
    case 0x0747c:
        return "TDHM287";
    case 0x07480:
        return "TDHM288";
    case 0x07484:
        return "TDHM289";
    case 0x07488:
        return "TDHM290";
    case 0x0748c:
        return "TDHM291";
    case 0x07490:
        return "TDHM292";
    case 0x07494:
        return "TDHM293";
    case 0x07498:
        return "TDHM294";
    case 0x0749c:
        return "TDHM295";
    case 0x074a0:
        return "TDHM296";
    case 0x074a4:
        return "TDHM297";
    case 0x074a8:
        return "TDHM298";
    case 0x074ac:
        return "TDHM299";
    case 0x074b0:
        return "TDHM300";
    case 0x074b4:
        return "TDHM301";
    case 0x074b8:
        return "TDHM302";
    case 0x074bc:
        return "TDHM303";
    case 0x074c0:
        return "TDHM304";
    case 0x074c4:
        return "TDHM305";
    case 0x074c8:
        return "TDHM306";
    case 0x074cc:
        return "TDHM307";
    case 0x074d0:
        return "TDHM308";
    case 0x074d4:
        return "TDHM309";
    case 0x074d8:
        return "TDHM310";
    case 0x074dc:
        return "TDHM311";
    case 0x074e0:
        return "TDHM312";
    case 0x074e4:
        return "TDHM313";
    case 0x074e8:
        return "TDHM314";
    case 0x074ec:
        return "TDHM315";
    case 0x074f0:
        return "TDHM316";
    case 0x074f4:
        return "TDHM317";
    case 0x074f8:
        return "TDHM318";
    case 0x074fc:
        return "TDHM319";
    case 0x07500:
        return "TDHM320";
    case 0x07504:
        return "TDHM321";
    case 0x07508:
        return "TDHM322";
    case 0x0750c:
        return "TDHM323";
    case 0x07510:
        return "TDHM324";
    case 0x07514:
        return "TDHM325";
    case 0x07518:
        return "TDHM326";
    case 0x0751c:
        return "TDHM327";
    case 0x07520:
        return "TDHM328";
    case 0x07524:
        return "TDHM329";
    case 0x07528:
        return "TDHM330";
    case 0x0752c:
        return "TDHM331";
    case 0x07530:
        return "TDHM332";
    case 0x07534:
        return "TDHM333";
    case 0x07538:
        return "TDHM334";
    case 0x0753c:
        return "TDHM335";
    case 0x07540:
        return "TDHM336";
    case 0x07544:
        return "TDHM337";
    case 0x07548:
        return "TDHM338";
    case 0x0754c:
        return "TDHM339";
    case 0x07550:
        return "TDHM340";
    case 0x07554:
        return "TDHM341";
    case 0x07558:
        return "TDHM342";
    case 0x0755c:
        return "TDHM343";
    case 0x07560:
        return "TDHM344";
    case 0x07564:
        return "TDHM345";
    case 0x07568:
        return "TDHM346";
    case 0x0756c:
        return "TDHM347";
    case 0x07570:
        return "TDHM348";
    case 0x07574:
        return "TDHM349";
    case 0x07578:
        return "TDHM350";
    case 0x0757c:
        return "TDHM351";
    case 0x07580:
        return "TDHM352";
    case 0x07584:
        return "TDHM353";
    case 0x07588:
        return "TDHM354";
    case 0x0758c:
        return "TDHM355";
    case 0x07590:
        return "TDHM356";
    case 0x07594:
        return "TDHM357";
    case 0x07598:
        return "TDHM358";
    case 0x0759c:
        return "TDHM359";
    case 0x075a0:
        return "TDHM360";
    case 0x075a4:
        return "TDHM361";
    case 0x075a8:
        return "TDHM362";
    case 0x075ac:
        return "TDHM363";
    case 0x075b0:
        return "TDHM364";
    case 0x075b4:
        return "TDHM365";
    case 0x075b8:
        return "TDHM366";
    case 0x075bc:
        return "TDHM367";
    case 0x075c0:
        return "TDHM368";
    case 0x075c4:
        return "TDHM369";
    case 0x075c8:
        return "TDHM370";
    case 0x075cc:
        return "TDHM371";
    case 0x075d0:
        return "TDHM372";
    case 0x075d4:
        return "TDHM373";
    case 0x075d8:
        return "TDHM374";
    case 0x075dc:
        return "TDHM375";
    case 0x075e0:
        return "TDHM376";
    case 0x075e4:
        return "TDHM377";
    case 0x075e8:
        return "TDHM378";
    case 0x075ec:
        return "TDHM379";
    case 0x075f0:
        return "TDHM380";
    case 0x075f4:
        return "TDHM381";
    case 0x075f8:
        return "TDHM382";
    case 0x075fc:
        return "TDHM383";
    case 0x07600:
        return "TDHM384";
    case 0x07604:
        return "TDHM385";
    case 0x07608:
        return "TDHM386";
    case 0x0760c:
        return "TDHM387";
    case 0x07610:
        return "TDHM388";
    case 0x07614:
        return "TDHM389";
    case 0x07618:
        return "TDHM390";
    case 0x0761c:
        return "TDHM391";
    case 0x07620:
        return "TDHM392";
    case 0x07624:
        return "TDHM393";
    case 0x07628:
        return "TDHM394";
    case 0x0762c:
        return "TDHM395";
    case 0x07630:
        return "TDHM396";
    case 0x07634:
        return "TDHM397";
    case 0x07638:
        return "TDHM398";
    case 0x0763c:
        return "TDHM399";
    case 0x07640:
        return "TDHM400";
    case 0x07644:
        return "TDHM401";
    case 0x07648:
        return "TDHM402";
    case 0x0764c:
        return "TDHM403";
    case 0x07650:
        return "TDHM404";
    case 0x07654:
        return "TDHM405";
    case 0x07658:
        return "TDHM406";
    case 0x0765c:
        return "TDHM407";
    case 0x07660:
        return "TDHM408";
    case 0x07664:
        return "TDHM409";
    case 0x07668:
        return "TDHM410";
    case 0x0766c:
        return "TDHM411";
    case 0x07670:
        return "TDHM412";
    case 0x07674:
        return "TDHM413";
    case 0x07678:
        return "TDHM414";
    case 0x0767c:
        return "TDHM415";
    case 0x07680:
        return "TDHM416";
    case 0x07684:
        return "TDHM417";
    case 0x07688:
        return "TDHM418";
    case 0x0768c:
        return "TDHM419";
    case 0x07690:
        return "TDHM420";
    case 0x07694:
        return "TDHM421";
    case 0x07698:
        return "TDHM422";
    case 0x0769c:
        return "TDHM423";
    case 0x076a0:
        return "TDHM424";
    case 0x076a4:
        return "TDHM425";
    case 0x076a8:
        return "TDHM426";
    case 0x076ac:
        return "TDHM427";
    case 0x076b0:
        return "TDHM428";
    case 0x076b4:
        return "TDHM429";
    case 0x076b8:
        return "TDHM430";
    case 0x076bc:
        return "TDHM431";
    case 0x076c0:
        return "TDHM432";
    case 0x076c4:
        return "TDHM433";
    case 0x076c8:
        return "TDHM434";
    case 0x076cc:
        return "TDHM435";
    case 0x076d0:
        return "TDHM436";
    case 0x076d4:
        return "TDHM437";
    case 0x076d8:
        return "TDHM438";
    case 0x076dc:
        return "TDHM439";
    case 0x076e0:
        return "TDHM440";
    case 0x076e4:
        return "TDHM441";
    case 0x076e8:
        return "TDHM442";
    case 0x076ec:
        return "TDHM443";
    case 0x076f0:
        return "TDHM444";
    case 0x076f4:
        return "TDHM445";
    case 0x076f8:
        return "TDHM446";
    case 0x076fc:
        return "TDHM447";
    case 0x07700:
        return "TDHM448";
    case 0x07704:
        return "TDHM449";
    case 0x07708:
        return "TDHM450";
    case 0x0770c:
        return "TDHM451";
    case 0x07710:
        return "TDHM452";
    case 0x07714:
        return "TDHM453";
    case 0x07718:
        return "TDHM454";
    case 0x0771c:
        return "TDHM455";
    case 0x07720:
        return "TDHM456";
    case 0x07724:
        return "TDHM457";
    case 0x07728:
        return "TDHM458";
    case 0x0772c:
        return "TDHM459";
    case 0x07730:
        return "TDHM460";
    case 0x07734:
        return "TDHM461";
    case 0x07738:
        return "TDHM462";
    case 0x0773c:
        return "TDHM463";
    case 0x07740:
        return "TDHM464";
    case 0x07744:
        return "TDHM465";
    case 0x07748:
        return "TDHM466";
    case 0x0774c:
        return "TDHM467";
    case 0x07750:
        return "TDHM468";
    case 0x07754:
        return "TDHM469";
    case 0x07758:
        return "TDHM470";
    case 0x0775c:
        return "TDHM471";
    case 0x07760:
        return "TDHM472";
    case 0x07764:
        return "TDHM473";
    case 0x07768:
        return "TDHM474";
    case 0x0776c:
        return "TDHM475";
    case 0x07770:
        return "TDHM476";
    case 0x07774:
        return "TDHM477";
    case 0x07778:
        return "TDHM478";
    case 0x0777c:
        return "TDHM479";
    case 0x07780:
        return "TDHM480";
    case 0x07784:
        return "TDHM481";
    case 0x07788:
        return "TDHM482";
    case 0x0778c:
        return "TDHM483";
    case 0x07790:
        return "TDHM484";
    case 0x07794:
        return "TDHM485";
    case 0x07798:
        return "TDHM486";
    case 0x0779c:
        return "TDHM487";
    case 0x077a0:
        return "TDHM488";
    case 0x077a4:
        return "TDHM489";
    case 0x077a8:
        return "TDHM490";
    case 0x077ac:
        return "TDHM491";
    case 0x077b0:
        return "TDHM492";
    case 0x077b4:
        return "TDHM493";
    case 0x077b8:
        return "TDHM494";
    case 0x077bc:
        return "TDHM495";
    case 0x077c0:
        return "TDHM496";
    case 0x077c4:
        return "TDHM497";
    case 0x077c8:
        return "TDHM498";
    case 0x077cc:
        return "TDHM499";
    case 0x077d0:
        return "TDHM500";
    case 0x077d4:
        return "TDHM501";
    case 0x077d8:
        return "TDHM502";
    case 0x077dc:
        return "TDHM503";
    case 0x077e0:
        return "TDHM504";
    case 0x077e4:
        return "TDHM505";
    case 0x077e8:
        return "TDHM506";
    case 0x077ec:
        return "TDHM507";
    case 0x077f0:
        return "TDHM508";
    case 0x077f4:
        return "TDHM509";
    case 0x077f8:
        return "TDHM510";
    case 0x077fc:
        return "TDHM511";
    case 0x07800:
        return "TDHM512";
    case 0x07804:
        return "TDHM513";
    case 0x07808:
        return "TDHM514";
    case 0x0780c:
        return "TDHM515";
    case 0x07810:
        return "TDHM516";
    case 0x07814:
        return "TDHM517";
    case 0x07818:
        return "TDHM518";
    case 0x0781c:
        return "TDHM519";
    case 0x07820:
        return "TDHM520";
    case 0x07824:
        return "TDHM521";
    case 0x07828:
        return "TDHM522";
    case 0x0782c:
        return "TDHM523";
    case 0x07830:
        return "TDHM524";
    case 0x07834:
        return "TDHM525";
    case 0x07838:
        return "TDHM526";
    case 0x0783c:
        return "TDHM527";
    case 0x07840:
        return "TDHM528";
    case 0x07844:
        return "TDHM529";
    case 0x07848:
        return "TDHM530";
    case 0x0784c:
        return "TDHM531";
    case 0x07850:
        return "TDHM532";
    case 0x07854:
        return "TDHM533";
    case 0x07858:
        return "TDHM534";
    case 0x0785c:
        return "TDHM535";
    case 0x07860:
        return "TDHM536";
    case 0x07864:
        return "TDHM537";
    case 0x07868:
        return "TDHM538";
    case 0x0786c:
        return "TDHM539";
    case 0x07870:
        return "TDHM540";
    case 0x07874:
        return "TDHM541";
    case 0x07878:
        return "TDHM542";
    case 0x0787c:
        return "TDHM543";
    case 0x07880:
        return "TDHM544";
    case 0x07884:
        return "TDHM545";
    case 0x07888:
        return "TDHM546";
    case 0x0788c:
        return "TDHM547";
    case 0x07890:
        return "TDHM548";
    case 0x07894:
        return "TDHM549";
    case 0x07898:
        return "TDHM550";
    case 0x0789c:
        return "TDHM551";
    case 0x078a0:
        return "TDHM552";
    case 0x078a4:
        return "TDHM553";
    case 0x078a8:
        return "TDHM554";
    case 0x078ac:
        return "TDHM555";
    case 0x078b0:
        return "TDHM556";
    case 0x078b4:
        return "TDHM557";
    case 0x078b8:
        return "TDHM558";
    case 0x078bc:
        return "TDHM559";
    case 0x078c0:
        return "TDHM560";
    case 0x078c4:
        return "TDHM561";
    case 0x078c8:
        return "TDHM562";
    case 0x078cc:
        return "TDHM563";
    case 0x078d0:
        return "TDHM564";
    case 0x078d4:
        return "TDHM565";
    case 0x078d8:
        return "TDHM566";
    case 0x078dc:
        return "TDHM567";
    case 0x078e0:
        return "TDHM568";
    case 0x078e4:
        return "TDHM569";
    case 0x078e8:
        return "TDHM570";
    case 0x078ec:
        return "TDHM571";
    case 0x078f0:
        return "TDHM572";
    case 0x078f4:
        return "TDHM573";
    case 0x078f8:
        return "TDHM574";
    case 0x078fc:
        return "TDHM575";
    case 0x07900:
        return "TDHM576";
    case 0x07904:
        return "TDHM577";
    case 0x07908:
        return "TDHM578";
    case 0x0790c:
        return "TDHM579";
    case 0x07910:
        return "TDHM580";
    case 0x07914:
        return "TDHM581";
    case 0x07918:
        return "TDHM582";
    case 0x0791c:
        return "TDHM583";
    case 0x07920:
        return "TDHM584";
    case 0x07924:
        return "TDHM585";
    case 0x07928:
        return "TDHM586";
    case 0x0792c:
        return "TDHM587";
    case 0x07930:
        return "TDHM588";
    case 0x07934:
        return "TDHM589";
    case 0x07938:
        return "TDHM590";
    case 0x0793c:
        return "TDHM591";
    case 0x07940:
        return "TDHM592";
    case 0x07944:
        return "TDHM593";
    case 0x07948:
        return "TDHM594";
    case 0x0794c:
        return "TDHM595";
    case 0x07950:
        return "TDHM596";
    case 0x07954:
        return "TDHM597";
    case 0x07958:
        return "TDHM598";
    case 0x0795c:
        return "TDHM599";
    case 0x07960:
        return "TDHM600";
    case 0x07964:
        return "TDHM601";
    case 0x07968:
        return "TDHM602";
    case 0x0796c:
        return "TDHM603";
    case 0x07970:
        return "TDHM604";
    case 0x07974:
        return "TDHM605";
    case 0x07978:
        return "TDHM606";
    case 0x0797c:
        return "TDHM607";
    case 0x07980:
        return "TDHM608";
    case 0x07984:
        return "TDHM609";
    case 0x07988:
        return "TDHM610";
    case 0x0798c:
        return "TDHM611";
    case 0x07990:
        return "TDHM612";
    case 0x07994:
        return "TDHM613";
    case 0x07998:
        return "TDHM614";
    case 0x0799c:
        return "TDHM615";
    case 0x079a0:
        return "TDHM616";
    case 0x079a4:
        return "TDHM617";
    case 0x079a8:
        return "TDHM618";
    case 0x079ac:
        return "TDHM619";
    case 0x079b0:
        return "TDHM620";
    case 0x079b4:
        return "TDHM621";
    case 0x079b8:
        return "TDHM622";
    case 0x079bc:
        return "TDHM623";
    case 0x079c0:
        return "TDHM624";
    case 0x079c4:
        return "TDHM625";
    case 0x079c8:
        return "TDHM626";
    case 0x079cc:
        return "TDHM627";
    case 0x079d0:
        return "TDHM628";
    case 0x079d4:
        return "TDHM629";
    case 0x079d8:
        return "TDHM630";
    case 0x079dc:
        return "TDHM631";
    case 0x079e0:
        return "TDHM632";
    case 0x079e4:
        return "TDHM633";
    case 0x079e8:
        return "TDHM634";
    case 0x079ec:
        return "TDHM635";
    case 0x079f0:
        return "TDHM636";
    case 0x079f4:
        return "TDHM637";
    case 0x079f8:
        return "TDHM638";
    case 0x079fc:
        return "TDHM639";
    case 0x07a00:
        return "TDHM640";
    case 0x07a04:
        return "TDHM641";
    case 0x07a08:
        return "TDHM642";
    case 0x07a0c:
        return "TDHM643";
    case 0x07a10:
        return "TDHM644";
    case 0x07a14:
        return "TDHM645";
    case 0x07a18:
        return "TDHM646";
    case 0x07a1c:
        return "TDHM647";
    case 0x07a20:
        return "TDHM648";
    case 0x07a24:
        return "TDHM649";
    case 0x07a28:
        return "TDHM650";
    case 0x07a2c:
        return "TDHM651";
    case 0x07a30:
        return "TDHM652";
    case 0x07a34:
        return "TDHM653";
    case 0x07a38:
        return "TDHM654";
    case 0x07a3c:
        return "TDHM655";
    case 0x07a40:
        return "TDHM656";
    case 0x07a44:
        return "TDHM657";
    case 0x07a48:
        return "TDHM658";
    case 0x07a4c:
        return "TDHM659";
    case 0x07a50:
        return "TDHM660";
    case 0x07a54:
        return "TDHM661";
    case 0x07a58:
        return "TDHM662";
    case 0x07a5c:
        return "TDHM663";
    case 0x07a60:
        return "TDHM664";
    case 0x07a64:
        return "TDHM665";
    case 0x07a68:
        return "TDHM666";
    case 0x07a6c:
        return "TDHM667";
    case 0x07a70:
        return "TDHM668";
    case 0x07a74:
        return "TDHM669";
    case 0x07a78:
        return "TDHM670";
    case 0x07a7c:
        return "TDHM671";
    case 0x07a80:
        return "TDHM672";
    case 0x07a84:
        return "TDHM673";
    case 0x07a88:
        return "TDHM674";
    case 0x07a8c:
        return "TDHM675";
    case 0x07a90:
        return "TDHM676";
    case 0x07a94:
        return "TDHM677";
    case 0x07a98:
        return "TDHM678";
    case 0x07a9c:
        return "TDHM679";
    case 0x07aa0:
        return "TDHM680";
    case 0x07aa4:
        return "TDHM681";
    case 0x07aa8:
        return "TDHM682";
    case 0x07aac:
        return "TDHM683";
    case 0x07ab0:
        return "TDHM684";
    case 0x07ab4:
        return "TDHM685";
    case 0x07ab8:
        return "TDHM686";
    case 0x07abc:
        return "TDHM687";
    case 0x07ac0:
        return "TDHM688";
    case 0x07ac4:
        return "TDHM689";
    case 0x07ac8:
        return "TDHM690";
    case 0x07acc:
        return "TDHM691";
    case 0x07ad0:
        return "TDHM692";
    case 0x07ad4:
        return "TDHM693";
    case 0x07ad8:
        return "TDHM694";
    case 0x07adc:
        return "TDHM695";
    case 0x07ae0:
        return "TDHM696";
    case 0x07ae4:
        return "TDHM697";
    case 0x07ae8:
        return "TDHM698";
    case 0x07aec:
        return "TDHM699";
    case 0x07af0:
        return "TDHM700";
    case 0x07af4:
        return "TDHM701";
    case 0x07af8:
        return "TDHM702";
    case 0x07afc:
        return "TDHM703";
    case 0x07b00:
        return "TDHM704";
    case 0x07b04:
        return "TDHM705";
    case 0x07b08:
        return "TDHM706";
    case 0x07b0c:
        return "TDHM707";
    case 0x07b10:
        return "TDHM708";
    case 0x07b14:
        return "TDHM709";
    case 0x07b18:
        return "TDHM710";
    case 0x07b1c:
        return "TDHM711";
    case 0x07b20:
        return "TDHM712";
    case 0x07b24:
        return "TDHM713";
    case 0x07b28:
        return "TDHM714";
    case 0x07b2c:
        return "TDHM715";
    case 0x07b30:
        return "TDHM716";
    case 0x07b34:
        return "TDHM717";
    case 0x07b38:
        return "TDHM718";
    case 0x07b3c:
        return "TDHM719";
    case 0x07b40:
        return "TDHM720";
    case 0x07b44:
        return "TDHM721";
    case 0x07b48:
        return "TDHM722";
    case 0x07b4c:
        return "TDHM723";
    case 0x07b50:
        return "TDHM724";
    case 0x07b54:
        return "TDHM725";
    case 0x07b58:
        return "TDHM726";
    case 0x07b5c:
        return "TDHM727";
    case 0x07b60:
        return "TDHM728";
    case 0x07b64:
        return "TDHM729";
    case 0x07b68:
        return "TDHM730";
    case 0x07b6c:
        return "TDHM731";
    case 0x07b70:
        return "TDHM732";
    case 0x07b74:
        return "TDHM733";
    case 0x07b78:
        return "TDHM734";
    case 0x07b7c:
        return "TDHM735";
    case 0x07b80:
        return "TDHM736";
    case 0x07b84:
        return "TDHM737";
    case 0x07b88:
        return "TDHM738";
    case 0x07b8c:
        return "TDHM739";
    case 0x07b90:
        return "TDHM740";
    case 0x07b94:
        return "TDHM741";
    case 0x07b98:
        return "TDHM742";
    case 0x07b9c:
        return "TDHM743";
    case 0x07ba0:
        return "TDHM744";
    case 0x07ba4:
        return "TDHM745";
    case 0x07ba8:
        return "TDHM746";
    case 0x07bac:
        return "TDHM747";
    case 0x07bb0:
        return "TDHM748";
    case 0x07bb4:
        return "TDHM749";
    case 0x07bb8:
        return "TDHM750";
    case 0x07bbc:
        return "TDHM751";
    case 0x07bc0:
        return "TDHM752";
    case 0x07bc4:
        return "TDHM753";
    case 0x07bc8:
        return "TDHM754";
    case 0x07bcc:
        return "TDHM755";
    case 0x07bd0:
        return "TDHM756";
    case 0x07bd4:
        return "TDHM757";
    case 0x07bd8:
        return "TDHM758";
    case 0x07bdc:
        return "TDHM759";
    case 0x07be0:
        return "TDHM760";
    case 0x07be4:
        return "TDHM761";
    case 0x07be8:
        return "TDHM762";
    case 0x07bec:
        return "TDHM763";
    case 0x07bf0:
        return "TDHM764";
    case 0x07bf4:
        return "TDHM765";
    case 0x07bf8:
        return "TDHM766";
    case 0x07bfc:
        return "TDHM767";
    case 0x07c00:
        return "TDHM768";
    case 0x07c04:
        return "TDHM769";
    case 0x07c08:
        return "TDHM770";
    case 0x07c0c:
        return "TDHM771";
    case 0x07c10:
        return "TDHM772";
    case 0x07c14:
        return "TDHM773";
    case 0x07c18:
        return "TDHM774";
    case 0x07c1c:
        return "TDHM775";
    case 0x07c20:
        return "TDHM776";
    case 0x07c24:
        return "TDHM777";
    case 0x07c28:
        return "TDHM778";
    case 0x07c2c:
        return "TDHM779";
    case 0x07c30:
        return "TDHM780";
    case 0x07c34:
        return "TDHM781";
    case 0x07c38:
        return "TDHM782";
    case 0x07c3c:
        return "TDHM783";
    case 0x07c40:
        return "TDHM784";
    case 0x07c44:
        return "TDHM785";
    case 0x07c48:
        return "TDHM786";
    case 0x07c4c:
        return "TDHM787";
    case 0x07c50:
        return "TDHM788";
    case 0x07c54:
        return "TDHM789";
    case 0x07c58:
        return "TDHM790";
    case 0x07c5c:
        return "TDHM791";
    case 0x07c60:
        return "TDHM792";
    case 0x07c64:
        return "TDHM793";
    case 0x07c68:
        return "TDHM794";
    case 0x07c6c:
        return "TDHM795";
    case 0x07c70:
        return "TDHM796";
    case 0x07c74:
        return "TDHM797";
    case 0x07c78:
        return "TDHM798";
    case 0x07c7c:
        return "TDHM799";
    case 0x07c80:
        return "TDHM800";
    case 0x07c84:
        return "TDHM801";
    case 0x07c88:
        return "TDHM802";
    case 0x07c8c:
        return "TDHM803";
    case 0x07c90:
        return "TDHM804";
    case 0x07c94:
        return "TDHM805";
    case 0x07c98:
        return "TDHM806";
    case 0x07c9c:
        return "TDHM807";
    case 0x07ca0:
        return "TDHM808";
    case 0x07ca4:
        return "TDHM809";
    case 0x07ca8:
        return "TDHM810";
    case 0x07cac:
        return "TDHM811";
    case 0x07cb0:
        return "TDHM812";
    case 0x07cb4:
        return "TDHM813";
    case 0x07cb8:
        return "TDHM814";
    case 0x07cbc:
        return "TDHM815";
    case 0x07cc0:
        return "TDHM816";
    case 0x07cc4:
        return "TDHM817";
    case 0x07cc8:
        return "TDHM818";
    case 0x07ccc:
        return "TDHM819";
    case 0x07cd0:
        return "TDHM820";
    case 0x07cd4:
        return "TDHM821";
    case 0x07cd8:
        return "TDHM822";
    case 0x07cdc:
        return "TDHM823";
    case 0x07ce0:
        return "TDHM824";
    case 0x07ce4:
        return "TDHM825";
    case 0x07ce8:
        return "TDHM826";
    case 0x07cec:
        return "TDHM827";
    case 0x07cf0:
        return "TDHM828";
    case 0x07cf4:
        return "TDHM829";
    case 0x07cf8:
        return "TDHM830";
    case 0x07cfc:
        return "TDHM831";
    case 0x07d00:
        return "TDHM832";
    case 0x07d04:
        return "TDHM833";
    case 0x07d08:
        return "TDHM834";
    case 0x07d0c:
        return "TDHM835";
    case 0x07d10:
        return "TDHM836";
    case 0x07d14:
        return "TDHM837";
    case 0x07d18:
        return "TDHM838";
    case 0x07d1c:
        return "TDHM839";
    case 0x07d20:
        return "TDHM840";
    case 0x07d24:
        return "TDHM841";
    case 0x07d28:
        return "TDHM842";
    case 0x07d2c:
        return "TDHM843";
    case 0x07d30:
        return "TDHM844";
    case 0x07d34:
        return "TDHM845";
    case 0x07d38:
        return "TDHM846";
    case 0x07d3c:
        return "TDHM847";
    case 0x07d40:
        return "TDHM848";
    case 0x07d44:
        return "TDHM849";
    case 0x07d48:
        return "TDHM850";
    case 0x07d4c:
        return "TDHM851";
    case 0x07d50:
        return "TDHM852";
    case 0x07d54:
        return "TDHM853";
    case 0x07d58:
        return "TDHM854";
    case 0x07d5c:
        return "TDHM855";
    case 0x07d60:
        return "TDHM856";
    case 0x07d64:
        return "TDHM857";
    case 0x07d68:
        return "TDHM858";
    case 0x07d6c:
        return "TDHM859";
    case 0x07d70:
        return "TDHM860";
    case 0x07d74:
        return "TDHM861";
    case 0x07d78:
        return "TDHM862";
    case 0x07d7c:
        return "TDHM863";
    case 0x07d80:
        return "TDHM864";
    case 0x07d84:
        return "TDHM865";
    case 0x07d88:
        return "TDHM866";
    case 0x07d8c:
        return "TDHM867";
    case 0x07d90:
        return "TDHM868";
    case 0x07d94:
        return "TDHM869";
    case 0x07d98:
        return "TDHM870";
    case 0x07d9c:
        return "TDHM871";
    case 0x07da0:
        return "TDHM872";
    case 0x07da4:
        return "TDHM873";
    case 0x07da8:
        return "TDHM874";
    case 0x07dac:
        return "TDHM875";
    case 0x07db0:
        return "TDHM876";
    case 0x07db4:
        return "TDHM877";
    case 0x07db8:
        return "TDHM878";
    case 0x07dbc:
        return "TDHM879";
    case 0x07dc0:
        return "TDHM880";
    case 0x07dc4:
        return "TDHM881";
    case 0x07dc8:
        return "TDHM882";
    case 0x07dcc:
        return "TDHM883";
    case 0x07dd0:
        return "TDHM884";
    case 0x07dd4:
        return "TDHM885";
    case 0x07dd8:
        return "TDHM886";
    case 0x07ddc:
        return "TDHM887";
    case 0x07de0:
        return "TDHM888";
    case 0x07de4:
        return "TDHM889";
    case 0x07de8:
        return "TDHM890";
    case 0x07dec:
        return "TDHM891";
    case 0x07df0:
        return "TDHM892";
    case 0x07df4:
        return "TDHM893";
    case 0x07df8:
        return "TDHM894";
    case 0x07dfc:
        return "TDHM895";
    case 0x07e00:
        return "TDHM896";
    case 0x07e04:
        return "TDHM897";
    case 0x07e08:
        return "TDHM898";
    case 0x07e0c:
        return "TDHM899";
    case 0x07e10:
        return "TDHM900";
    case 0x07e14:
        return "TDHM901";
    case 0x07e18:
        return "TDHM902";
    case 0x07e1c:
        return "TDHM903";
    case 0x07e20:
        return "TDHM904";
    case 0x07e24:
        return "TDHM905";
    case 0x07e28:
        return "TDHM906";
    case 0x07e2c:
        return "TDHM907";
    case 0x07e30:
        return "TDHM908";
    case 0x07e34:
        return "TDHM909";
    case 0x07e38:
        return "TDHM910";
    case 0x07e3c:
        return "TDHM911";
    case 0x07e40:
        return "TDHM912";
    case 0x07e44:
        return "TDHM913";
    case 0x07e48:
        return "TDHM914";
    case 0x07e4c:
        return "TDHM915";
    case 0x07e50:
        return "TDHM916";
    case 0x07e54:
        return "TDHM917";
    case 0x07e58:
        return "TDHM918";
    case 0x07e5c:
        return "TDHM919";
    case 0x07e60:
        return "TDHM920";
    case 0x07e64:
        return "TDHM921";
    case 0x07e68:
        return "TDHM922";
    case 0x07e6c:
        return "TDHM923";
    case 0x07e70:
        return "TDHM924";
    case 0x07e74:
        return "TDHM925";
    case 0x07e78:
        return "TDHM926";
    case 0x07e7c:
        return "TDHM927";
    case 0x07e80:
        return "TDHM928";
    case 0x07e84:
        return "TDHM929";
    case 0x07e88:
        return "TDHM930";
    case 0x07e8c:
        return "TDHM931";
    case 0x07e90:
        return "TDHM932";
    case 0x07e94:
        return "TDHM933";
    case 0x07e98:
        return "TDHM934";
    case 0x07e9c:
        return "TDHM935";
    case 0x07ea0:
        return "TDHM936";
    case 0x07ea4:
        return "TDHM937";
    case 0x07ea8:
        return "TDHM938";
    case 0x07eac:
        return "TDHM939";
    case 0x07eb0:
        return "TDHM940";
    case 0x07eb4:
        return "TDHM941";
    case 0x07eb8:
        return "TDHM942";
    case 0x07ebc:
        return "TDHM943";
    case 0x07ec0:
        return "TDHM944";
    case 0x07ec4:
        return "TDHM945";
    case 0x07ec8:
        return "TDHM946";
    case 0x07ecc:
        return "TDHM947";
    case 0x07ed0:
        return "TDHM948";
    case 0x07ed4:
        return "TDHM949";
    case 0x07ed8:
        return "TDHM950";
    case 0x07edc:
        return "TDHM951";
    case 0x07ee0:
        return "TDHM952";
    case 0x07ee4:
        return "TDHM953";
    case 0x07ee8:
        return "TDHM954";
    case 0x07eec:
        return "TDHM955";
    case 0x07ef0:
        return "TDHM956";
    case 0x07ef4:
        return "TDHM957";
    case 0x07ef8:
        return "TDHM958";
    case 0x07efc:
        return "TDHM959";
    case 0x07f00:
        return "TDHM960";
    case 0x07f04:
        return "TDHM961";
    case 0x07f08:
        return "TDHM962";
    case 0x07f0c:
        return "TDHM963";
    case 0x07f10:
        return "TDHM964";
    case 0x07f14:
        return "TDHM965";
    case 0x07f18:
        return "TDHM966";
    case 0x07f1c:
        return "TDHM967";
    case 0x07f20:
        return "TDHM968";
    case 0x07f24:
        return "TDHM969";
    case 0x07f28:
        return "TDHM970";
    case 0x07f2c:
        return "TDHM971";
    case 0x07f30:
        return "TDHM972";
    case 0x07f34:
        return "TDHM973";
    case 0x07f38:
        return "TDHM974";
    case 0x07f3c:
        return "TDHM975";
    case 0x07f40:
        return "TDHM976";
    case 0x07f44:
        return "TDHM977";
    case 0x07f48:
        return "TDHM978";
    case 0x07f4c:
        return "TDHM979";
    case 0x07f50:
        return "TDHM980";
    case 0x07f54:
        return "TDHM981";
    case 0x07f58:
        return "TDHM982";
    case 0x07f5c:
        return "TDHM983";
    case 0x07f60:
        return "TDHM984";
    case 0x07f64:
        return "TDHM985";
    case 0x07f68:
        return "TDHM986";
    case 0x07f6c:
        return "TDHM987";
    case 0x07f70:
        return "TDHM988";
    case 0x07f74:
        return "TDHM989";
    case 0x07f78:
        return "TDHM990";
    case 0x07f7c:
        return "TDHM991";
    case 0x07f80:
        return "TDHM992";
    case 0x07f84:
        return "TDHM993";
    case 0x07f88:
        return "TDHM994";
    case 0x07f8c:
        return "TDHM995";
    case 0x07f90:
        return "TDHM996";
    case 0x07f94:
        return "TDHM997";
    case 0x07f98:
        return "TDHM998";
    case 0x07f9c:
        return "TDHM999";
    case 0x07fa0:
        return "TDHM1000";
    case 0x07fa4:
        return "TDHM1001";
    case 0x07fa8:
        return "TDHM1002";
    case 0x07fac:
        return "TDHM1003";
    case 0x07fb0:
        return "TDHM1004";
    case 0x07fb4:
        return "TDHM1005";
    case 0x07fb8:
        return "TDHM1006";
    case 0x07fbc:
        return "TDHM1007";
    case 0x07fc0:
        return "TDHM1008";
    case 0x07fc4:
        return "TDHM1009";
    case 0x07fc8:
        return "TDHM1010";
    case 0x07fcc:
        return "TDHM1011";
    case 0x07fd0:
        return "TDHM1012";
    case 0x07fd4:
        return "TDHM1013";
    case 0x07fd8:
        return "TDHM1014";
    case 0x07fdc:
        return "TDHM1015";
    case 0x07fe0:
        return "TDHM1016";
    case 0x07fe4:
        return "TDHM1017";
    case 0x07fe8:
        return "TDHM1018";
    case 0x07fec:
        return "TDHM1019";
    case 0x07ff0:
        return "TDHM1020";
    case 0x07ff4:
        return "TDHM1021";
    case 0x07ff8:
        return "TDHM1022";
    case 0x07ffc:
        return "TDHM1023";
    case 0x035fc:
        return "TDHMP";
    case 0x0245c:
        return "RPBECCSTS";
    case 0x0345c:
        return "TPBECCSTS";
    case 0x0305c:
        return "SWPBECCSTS";
    case 0x0b474:
        return "IPPBEEI";
    case 0x025c0:
        return "RDHESTS";
    case 0x035c0:
        return "TDHESTS";
    case 0x05ba0:
        return "PRBESTS";
    case 0x05bb0:
        return "PWBESTS";
    case 0x05ba8:
        return "PMSIXESTS";
    case 0x01084:
        return "PEIND";
    case 0x01088:
        return "PEINDM";
    case 0x035e0:
        return "TXBDC";
    case 0x035e4:
        return "TXIDLE";
    case 0x025e0:
        return "RXBDC";
    case 0x025e4:
        return "RXIDLE";


    default:
        return "???";
    }
}
inline const char * igb_vf_reg2name(hwaddr offset)
{
    switch (offset) {

    default:
        return "???";

// Virtual function Register Descriptions
    case 0x00000:
        return "VTCTRL";
    case 0x00008:
        return "STATUS";
    case 0x01048:
        return "VTFRTIMER";
    case 0x01580:
        return "VTEICR";
    case 0x01520:
        return "VTEICS";
    case 0x01524:
        return "VTEIMS";
    case 0x01528:
        return "VTEIMC";
    case 0x0152c:
        return "VTEIAC";
    case 0x01530:
        return "VTEIAM";
    case 0x01680:
        return "VTEITR0";
    case 0x01684:
        return "VTEITR1";
    case 0x01688:
        return "VTEITR2";
    case 0x01700:
        return "VTIVAR";
    case 0x01740:
        return "VTIVAR_MISC";
    case 0x00f04:
        return "PBACL";
    case 0x02800:
        return "RDBAL0";
    case 0x02900:
        return "RDBAL1";
    case 0x02804:
        return "RDBAH0";
    case 0x02904:
        return "RDBAH1";
    case 0x02808:
        return "RDLEN0";
    case 0x02908:
        return "RDLEN1";
    case 0x02810:
        return "RDH0";
    case 0x02910:
        return "RDH1";
    case 0x02818:
        return "RDT0";
    case 0x02918:
        return "RDT1";
    case 0x02828:
        return "RXDCTL0";
    case 0x02928:
        return "RXDCTL1";
    case 0x0280c:
        return "SRRCTL0";
    case 0x0290c:
        return "SRRCTL1";
    case 0x02830:
        return "RQDPC0";
    case 0x02930:
        return "RQDPC1";
    case 0x00f0c:
        return "PSRTYPE";
    case 0x03800:
        return "TDBAL0";
    case 0x03900:
        return "TDBAL1";
    case 0x03804:
        return "TDBAH0";
    case 0x03904:
        return "TDBAH1";
    case 0x03808:
        return "TDLEN0";
    case 0x03908:
        return "TDLEN1";
    case 0x03810:
        return "TDH0";
    case 0x03910:
        return "TDH1";
    case 0x03818:
        return "TDT0";
    case 0x03918:
        return "TDT1";
    case 0x03828:
        return "TXDCTL0";
    case 0x03928:
        return "TXDCTL1";
    case 0x03838:
        return "TDWBAL0";
    case 0x03938:
        return "TDWBAL1";
    case 0x0383c:
        return "TDWBAH0";
    case 0x0393c:
        return "TDWBAH1";
    case 0x02814:
        return "RXCTL0";
    case 0x02914:
        return "RXCTL1";
    case 0x03814:
        return "TXCTL0";
    case 0x03914:
        return "TXCTL1";
    case 0x00f10:
        return "VFGPRC";
    case 0x00f14:
        return "VFGPTC";
    case 0x00f18:
        return "VFGORC";
    case 0x00f34:
        return "VFGOTC";
    case 0x00f3c:
        return "VFMPRC";
    case 0x00f50:
        return "VFGOTLBC";
    case 0x00f44:
        return "VFGPTLBC";
    case 0x00f48:
        return "VFGORLBC";
    case 0x00f40:
        return "VFGPRLBC";
    case 0x00c40:
        return "VFMailbox";
    case 0x034e8:
        return "PBTWAC";
    case 0x024e8:
        return "PBRWAC";
    case 0x030e8:
        return "PBSWAC";
    }
}
